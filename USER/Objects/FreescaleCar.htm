<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\FreescaleCar.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\FreescaleCar.axf</H1><HR>
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Wed May 16 17:01:43 2018
=======
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Tue May 15 21:58:37 2018
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Sat May 26 18:28:28 2018
>>>>>>> Mr-He
=======
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Sat May 26 20:50:04 2018
>>>>>>> Mr-He
<BR><P>
<H3>Maximum Stack Usage =        504 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
displayTask &rArr; SystemReset &rArr; GUI_MessageBoxDraw &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
<P>
<H3>
Functions with no stack information
</H3><UL>
<<<<<<< HEAD
<<<<<<< HEAD
 <LI><a href="#[65]">__user_initial_stackheap</a>
=======
 <LI><a href="#[6b]">__user_initial_stackheap</a>
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
 <LI><a href="#[6e]">__user_initial_stackheap</a>
>>>>>>> Mr-He
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
<<<<<<< HEAD
</H3> <LI><a href="#[8]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">NMI_Handler</a><BR>
 <LI><a href="#[9]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">HardFault_Handler</a><BR>
 <LI><a href="#[a]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SVC_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[1d]">ACMP0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ACMP0_IRQHandler</a><BR>
<<<<<<< HEAD
 <LI><a href="#[ef]">sort_QuickSort</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ef]">sort_QuickSort</a><BR>
=======
 <LI><a href="#[110]">sort_QuickSort</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[110]">sort_QuickSort</a><BR>
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
</H3> <LI><a href="#[7]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">NMI_Handler</a><BR>
 <LI><a href="#[8]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">HardFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ACMP0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ACMP0_IRQHandler</a><BR>
<<<<<<< HEAD
 <LI><a href="#[10a]">sort_QuickSort</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10a]">sort_QuickSort</a><BR>
>>>>>>> Mr-He
=======
 <LI><a href="#[109]">sort_QuickSort</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[109]">sort_QuickSort</a><BR>
>>>>>>> Mr-He
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ACMP0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[21]">ACMP1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1b]">ADC0_IRQHandler</a> from drv_adc.o(i.ADC0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2f]">Car_Control</a> from freescalecar.o(i.Car_Control) referenced from freescalecar.o(i.Car_ControlStart)
 <LI><a href="#[2f]">Car_Control</a> from freescalecar.o(i.Car_Control) referenced from main.o(i.main)
 <LI><a href="#[1d]">FTM0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1e]">FTM1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1f]">FTM2_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[11]">FTMRE_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[8]">HardFault_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[14]">I2C0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[15]">I2C1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[27]">ICS_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[13]">IRQ_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[3b]">IsKeyDownPress</a> from bsp_key.o(i.IsKeyDownPress) referenced from bsp_key.o(i.bsp_key_FifoConfig)
 <LI><a href="#[3a]">IsKeyOkPress</a> from bsp_key.o(i.IsKeyOkPress) referenced from bsp_key.o(i.bsp_key_FifoConfig)
 <LI><a href="#[39]">IsKeyUpPress</a> from bsp_key.o(i.IsKeyUpPress) referenced from bsp_key.o(i.bsp_key_FifoConfig)
 <LI><a href="#[24]">KBI0_IRQHandler</a> from drv_kbi.o(i.KBI0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[25]">KBI1_IRQHandler</a> from drv_kbi.o(i.KBI1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[12]">LVD_LVW_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[42]">MPU_READ_SDA</a> from bsp_mpu.o(i.MPU_READ_SDA) referenced from bsp_mpu.o(i.bsp_mpu_IICConfig)
 <LI><a href="#[3c]">MPU_SCL_HIGH</a> from bsp_mpu.o(i.MPU_SCL_HIGH) referenced from bsp_mpu.o(i.bsp_mpu_IICConfig)
 <LI><a href="#[3d]">MPU_SCL_LOW</a> from bsp_mpu.o(i.MPU_SCL_LOW) referenced from bsp_mpu.o(i.bsp_mpu_IICConfig)
 <LI><a href="#[3e]">MPU_SDA_HIGH</a> from bsp_mpu.o(i.MPU_SDA_HIGH) referenced from bsp_mpu.o(i.bsp_mpu_IICConfig)
 <LI><a href="#[3f]">MPU_SDA_LOW</a> from bsp_mpu.o(i.MPU_SDA_LOW) referenced from bsp_mpu.o(i.bsp_mpu_IICConfig)
 <LI><a href="#[40]">MPU_SDA_SET_IN</a> from bsp_mpu.o(i.MPU_SDA_SET_IN) referenced from bsp_mpu.o(i.bsp_mpu_IICConfig)
 <LI><a href="#[41]">MPU_SDA_SET_OUT</a> from bsp_mpu.o(i.MPU_SDA_SET_OUT) referenced from bsp_mpu.o(i.bsp_mpu_IICConfig)
 <LI><a href="#[2a]">MSCAN_RX_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2b]">MSCAN_TX_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[7]">NMI_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[22]">PIT_CH0_IRQHandler</a> from drv_pit.o(i.PIT_CH0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[23]">PIT_CH1_IRQHandler</a> from drv_pit.o(i.PIT_CH1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[29]">PWT_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[20]">RTC_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[c]">Reserved16_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[d]">Reserved17_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[e]">Reserved18_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[f]">Reserved19_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[10]">Reserved20_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[26]">Reserved42_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[6]">Reset_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[16]">SPI0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[17]">SPI1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from bsp_timer.o(i.SysTick_Handler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2c]">SystemInit</a> from system_skeaz1284.o(i.SystemInit) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[18]">UART0_IRQHandler</a> from app_debug.o(i.UART0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[19]">UART1_IRQHandler</a> from drv_uart.o(i.UART1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1a]">UART2_IRQHandler</a> from drv_uart.o(i.UART2_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[28]">Watchdog_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[47]">__main</a> from __main.o(!!!main) referenced from startup_skeaz1284.o(.text)
<<<<<<< HEAD
 <LI><a href="#[45]">bsp_key_Scan</a> from bsp_key.o(i.bsp_key_Scan) referenced from main.o(i.main)
<<<<<<< HEAD
=======
 <LI><a href="#[46]">bsp_mpu_GetAngle</a> from bsp_mpu.o(i.bsp_mpu_GetAngle) referenced from main.o(i.main)
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
 <LI><a href="#[44]">debug_CarDataReport</a> from app_debug.o(i.debug_CarDataReport) referenced from main.o(i.main)
 <LI><a href="#[47]">displayTask</a> from display.o(i.displayTask) referenced from main.o(i.main)
 <LI><a href="#[34]">gotoCarParaReset</a> from menu.o(i.gotoCarParaReset) referenced from menu.o(i.MainMenu_Init)
 <LI><a href="#[32]">gotoNextMenu</a> from menu.o(i.gotoNextMenu) referenced from menu.o(i.MainMenu_Init)
 <LI><a href="#[32]">gotoNextMenu</a> from menu.o(i.gotoNextMenu) referenced from menu.o(i.PIDAdjMenu_Init)
 <LI><a href="#[32]">gotoNextMenu</a> from menu.o(i.gotoNextMenu) referenced from menu.o(i.ParaSetMenu_Init)
 <LI><a href="#[31]">gotoParaShow</a> from menu.o(i.gotoParaShow) referenced from menu.o(i.MainMenu_Init)
 <LI><a href="#[38]">gotoSetDirctionKd</a> from menu.o(i.gotoSetDirctionKd) referenced from menu.o(i.PIDAdjMenu_Init)
 <LI><a href="#[37]">gotoSetDirctionKp</a> from menu.o(i.gotoSetDirctionKp) referenced from menu.o(i.PIDAdjMenu_Init)
 <LI><a href="#[36]">gotoSetSpeedKi</a> from menu.o(i.gotoSetSpeedKi) referenced from menu.o(i.PIDAdjMenu_Init)
 <LI><a href="#[35]">gotoSetSpeedKp</a> from menu.o(i.gotoSetSpeedKp) referenced from menu.o(i.PIDAdjMenu_Init)
 <LI><a href="#[39]">gotoSetTargetSpeed</a> from menu.o(i.gotoSetTargetSpeed) referenced from menu.o(i.ParaSetMenu_Init)
 <LI><a href="#[2e]">init_data_bss</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[33]">setSpeedControl</a> from menu.o(i.setSpeedControl) referenced from menu.o(i.MainMenu_Init)
=======
 <LI><a href="#[45]">bsp_beep_Thread</a> from bsp_beep.o(i.bsp_beep_Thread) referenced from main.o(i.main)
 <LI><a href="#[44]">bsp_key_Scan</a> from bsp_key.o(i.bsp_key_Scan) referenced from main.o(i.main)
 <LI><a href="#[46]">bsp_mpu_GetAngle</a> from bsp_mpu.o(i.bsp_mpu_GetAngle) referenced from main.o(i.main)
 <LI><a href="#[43]">debug_CarDataReport</a> from app_debug.o(i.debug_CarDataReport) referenced from main.o(i.main)
 <LI><a href="#[33]">gotoCarParaReset</a> from menu.o(i.gotoCarParaReset) referenced from menu.o(i.MainMenu_Init)
 <LI><a href="#[31]">gotoNextMenu</a> from menu.o(i.gotoNextMenu) referenced from menu.o(i.MainMenu_Init)
 <LI><a href="#[31]">gotoNextMenu</a> from menu.o(i.gotoNextMenu) referenced from menu.o(i.PIDAdjMenu_Init)
 <LI><a href="#[31]">gotoNextMenu</a> from menu.o(i.gotoNextMenu) referenced from menu.o(i.ParaSetMenu_Init)
 <LI><a href="#[30]">gotoParaShow</a> from menu.o(i.gotoParaShow) referenced from menu.o(i.MainMenu_Init)
 <LI><a href="#[37]">gotoSetDirctionKd</a> from menu.o(i.gotoSetDirctionKd) referenced from menu.o(i.PIDAdjMenu_Init)
 <LI><a href="#[36]">gotoSetDirctionKp</a> from menu.o(i.gotoSetDirctionKp) referenced from menu.o(i.PIDAdjMenu_Init)
 <LI><a href="#[35]">gotoSetSpeedKi</a> from menu.o(i.gotoSetSpeedKi) referenced from menu.o(i.PIDAdjMenu_Init)
 <LI><a href="#[34]">gotoSetSpeedKp</a> from menu.o(i.gotoSetSpeedKp) referenced from menu.o(i.PIDAdjMenu_Init)
 <LI><a href="#[38]">gotoSetTargetSpeed</a> from menu.o(i.gotoSetTargetSpeed) referenced from menu.o(i.ParaSetMenu_Init)
 <LI><a href="#[2d]">init_data_bss</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[32]">setSpeedControl</a> from menu.o(i.setSpeedControl) referenced from menu.o(i.MainMenu_Init)
>>>>>>> Mr-He
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[47]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[48]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[4a]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[11b]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[11c]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[11d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)
=======
<P><STRONG><a name="[13d]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
=======
<P><STRONG><a name="[138]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
>>>>>>> Mr-He
=======
<P><STRONG><a name="[137]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
>>>>>>> Mr-He

<P><STRONG><a name="[138]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[13f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[13a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)
>>>>>>> Mr-He
=======
<P><STRONG><a name="[139]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)
>>>>>>> Mr-He

<P><STRONG><a name="[4e]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[11e]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[11f]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[120]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[121]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[122]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[123]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[124]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[125]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[126]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[127]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[128]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[129]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[12a]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[12b]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[12c]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[12d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[12e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[12f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[130]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[131]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[132]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))
=======
<P><STRONG><a name="[140]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))
=======
<P><STRONG><a name="[13b]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[13a]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))
>>>>>>> Mr-He

<P><STRONG><a name="[13b]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[13c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[13d]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[13e]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[13f]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[140]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[141]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[142]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[143]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[144]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[145]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[146]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[147]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[148]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[149]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[14a]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[14b]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[14c]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[14d]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[154]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[14f]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[14e]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))
>>>>>>> Mr-He

<P><STRONG><a name="[53]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[133]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[134]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[135]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[136]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[137]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[138]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[139]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))
=======
<P><STRONG><a name="[155]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))
=======
<P><STRONG><a name="[150]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[14f]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))
>>>>>>> Mr-He

<P><STRONG><a name="[150]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[151]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[152]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[153]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[154]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[15b]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[156]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[155]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))
>>>>>>> Mr-He

<P><STRONG><a name="[49]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[13a]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))
=======
<P><STRONG><a name="[15c]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[157]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[156]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))
>>>>>>> Mr-He

<P><STRONG><a name="[4b]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4d]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[13b]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[50]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; bsp_sensor_Calibration &rArr; oled_showString &rArr; oled_showChar &rArr; oled_drawPoint
=======
<P><STRONG><a name="[15d]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))
=======
<P><STRONG><a name="[158]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[157]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))
>>>>>>> Mr-He

<P><STRONG><a name="[4f]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; displayTask &rArr; SystemReset &rArr; GUI_MessageBoxDraw &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[13c]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[67]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
=======
<P><STRONG><a name="[15e]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))
=======
<P><STRONG><a name="[159]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[158]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))
>>>>>>> Mr-He

<P><STRONG><a name="[70]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
</UL>

<P><STRONG><a name="[52]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[13d]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))
=======
<P><STRONG><a name="[15f]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[15a]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[159]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))
>>>>>>> Mr-He

<P><STRONG><a name="[54]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2d]"></a>init_data_bss</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(.text)
</UL>
<P><STRONG><a name="[6]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ACMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ACMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[13e]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text), UNUSED)
=======
<P><STRONG><a name="[160]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text), UNUSED)
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[15b]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text), UNUSED)
>>>>>>> Mr-He
=======
<P><STRONG><a name="[15a]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text), UNUSED)
>>>>>>> Mr-He

<P><STRONG><a name="[1d]"></a>FTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>FTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FTMRE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ICS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>IRQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>MSCAN_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>MSCAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PWT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>Reserved16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>Reserved17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>Reserved18_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Reserved19_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>Reserved42_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>Watchdog_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[65]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_skeaz1284.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[13f]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBtnStringlen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWindowStringlen
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_font
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str_mid
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMessageBoxStringlen
=======
<P><STRONG><a name="[6b]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_skeaz1284.o(.text))
=======
<P><STRONG><a name="[6e]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_skeaz1284.o(.text))
>>>>>>> Mr-He
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[15b]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strlen
</UL>
<<<<<<< HEAD
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBtnStringlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWindowStringlen
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_font
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str_mid
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMessageBoxStringlen
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBtnStringlen
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWindowStringlen
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_font
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str_mid
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMessageBoxStringlen
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[57]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[56]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[140]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaStore
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_SensorDataReport
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
</UL>

<P><STRONG><a name="[141]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
=======
<P><STRONG><a name="[162]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
=======
<P><STRONG><a name="[15d]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
>>>>>>> Mr-He
=======
<P><STRONG><a name="[15c]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
>>>>>>> Mr-He

<P><STRONG><a name="[107]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_SensorDataReport
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[163]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[15e]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
>>>>>>> Mr-He
=======
<P><STRONG><a name="[15d]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
>>>>>>> Mr-He

<P><STRONG><a name="[59]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[142]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMInit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftConfig
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetRate
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_SildingAverage
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Scrollbar_SetPos
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
</UL>

<P><STRONG><a name="[143]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMSetDuty
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMInit
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>

<P><STRONG><a name="[144]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ffixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_MotorOutput
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_SensorDataReport
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
</UL>

<P><STRONG><a name="[147]"></a>_ffix</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, ffixi.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[148]"></a>_ffixu</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControlOutput
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControlOutput
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_GetVoltage
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDDownload
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
</UL>

<P><STRONG><a name="[5e]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[5d]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_MotorOutput
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDDownload
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
</UL>

<P><STRONG><a name="[14b]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControlOutput
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControlOutput
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_GetVoltage
</UL>

<P><STRONG><a name="[14c]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, fcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[63]"></a>__fpl_cmpreturn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>

<P><STRONG><a name="[14d]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[14e]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)
=======
<P><STRONG><a name="[164]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)
=======
<P><STRONG><a name="[15f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)
>>>>>>> Mr-He
=======
<P><STRONG><a name="[15e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)
>>>>>>> Mr-He

<P><STRONG><a name="[94]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMInit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftConfig
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetRate
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_SildingAverage
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Scrollbar_SetPos
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
</UL>

<P><STRONG><a name="[15f]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMSetDuty
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMInit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControlOutput
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControlOutput
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>

<P><STRONG><a name="[160]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[161]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[162]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RightVelocityPIDCalc
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_LeftVelocityPIDCalc
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_GetAngle
</UL>

<P><STRONG><a name="[163]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[164]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RightVelocityPIDCalc
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_LeftVelocityPIDCalc
</UL>

<P><STRONG><a name="[5c]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[166]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[167]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[a3]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_GetAngle
</UL>

<P><STRONG><a name="[62]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[61]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[63]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
</UL>

<P><STRONG><a name="[168]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>

<P><STRONG><a name="[169]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RightVelocityPIDCalc
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_LeftVelocityPIDCalc
</UL>

<P><STRONG><a name="[16a]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RightVelocityPIDCalc
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_LeftVelocityPIDCalc
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_GetAngle
</UL>

<P><STRONG><a name="[16b]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDInit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDDownload
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
</UL>

<P><STRONG><a name="[67]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[66]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ffixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RightVelocityPIDCalc
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_LeftVelocityPIDCalc
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_SensorDataReport
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
</UL>

<P><STRONG><a name="[16c]"></a>_ffix</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, ffixi.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[16d]"></a>_ffixu</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RightVelocityPIDCalc
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_LeftVelocityPIDCalc
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_GetAngle
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDDownload
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
</UL>

<P><STRONG><a name="[16e]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
</UL>

<P><STRONG><a name="[16f]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, fcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[6c]"></a>__fpl_cmpreturn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[170]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[174]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[172]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)
>>>>>>> Mr-He
=======
<P><STRONG><a name="[171]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)
>>>>>>> Mr-He

<P><STRONG><a name="[4c]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
=======
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[51]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
=======
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<<<<<<< HEAD
<P><STRONG><a name="[5c]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
=======
<P><STRONG><a name="[5b]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<<<<<<< HEAD
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[14f]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)
=======
<P><STRONG><a name="[175]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[176]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[173]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[174]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)
>>>>>>> Mr-He
=======
<P><STRONG><a name="[172]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[173]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)
>>>>>>> Mr-He

<P><STRONG><a name="[1b]"></a>ADC0_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, drv_adc.o(i.ADC0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[30]"></a>Car_Control</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, freescalecar.o(i.Car_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = Car_Control &rArr; Car_DirectionControl &rArr; fuzzy_PIDClac &rArr; fuzzy_TriMF &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControlOutput
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_MotorOutput
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControlOutput
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
=======
<P><STRONG><a name="[30]"></a>Car_Control</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, freescalecar.o(i.Car_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Car_Control &rArr; Car_DirectionControl &rArr; fuzzy_PIDClac &rArr; fuzzy_TriMF &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_MotorOutput
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControlOutput
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControlOutput
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[2f]"></a>Car_Control</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, freescalecar.o(i.Car_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Car_Control &rArr; Car_DirectionControl &rArr; fuzzy_PIDClac &rArr; fuzzy_TriMF &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_ReadCounter
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControlOutput
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_MotorOutput
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControlOutput
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 2]<UL><LI> main.o(i.main)
<LI> freescalecar.o(i.Car_ControlStart)
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[70]"></a>Car_ControlStart</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, freescalecar.o(i.Car_ControlStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Car_ControlStart &rArr; bsp_tim_CreateHardTimer &rArr; drv_pit_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateHardTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[72]"></a>Car_ControlStop</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, freescalecar.o(i.Car_ControlStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Car_ControlStop &rArr; bsp_tim_DeleteHardTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DeleteHardTimer
=======
<P><STRONG><a name="[75]"></a>Car_ControlStart</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, freescalecar.o(i.Car_ControlStart))
=======
<P><STRONG><a name="[7a]"></a>Car_ControlStart</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, freescalecar.o(i.Car_ControlStart))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Car_ControlStart &rArr; bsp_tim_CreateHardTimer &rArr; drv_pit_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateHardTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[7c]"></a>Car_ControlStop</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, freescalecar.o(i.Car_ControlStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Car_ControlStop &rArr; bsp_tim_DeleteHardTimer
</UL>
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DeleteHardTimer
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DeleteHardTimer
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetSpeedKp
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetSpeedKi
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetDirctionKp
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetDirctionKd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoCarParaReset
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[6d]"></a>Car_DirectionControl</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, freescalecar.o(i.Car_DirectionControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Car_DirectionControl &rArr; fuzzy_PIDClac &rArr; fuzzy_TriMF &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
=======
<P><STRONG><a name="[73]"></a>Car_DirectionControl</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, freescalecar.o(i.Car_DirectionControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Car_DirectionControl &rArr; fuzzy_PIDClac &rArr; fuzzy_TriMF &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[78]"></a>Car_DirectionControl</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, freescalecar.o(i.Car_DirectionControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Car_DirectionControl &rArr; fuzzy_PIDClac &rArr; fuzzy_TriMF &rArr; __aeabi_fdiv
=======
<P><STRONG><a name="[78]"></a>Car_DirectionControl</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, freescalecar.o(i.Car_DirectionControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Car_DirectionControl &rArr; fuzzy_PIDClac &rArr; fuzzy_TriMF &rArr; __aeabi_fdiv
>>>>>>> Mr-He
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[69]"></a>Car_DirectionControlOutput</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, freescalecar.o(i.Car_DirectionControlOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Car_DirectionControlOutput &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
=======
<P><STRONG><a name="[6f]"></a>Car_DirectionControlOutput</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, freescalecar.o(i.Car_DirectionControlOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Car_DirectionControlOutput &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[72]"></a>Car_DirectionControlOutput</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, freescalecar.o(i.Car_DirectionControlOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Car_DirectionControlOutput &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[46]"></a>Car_GetVoltage</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, freescalecar.o(i.Car_GetVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Car_GetVoltage &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_ConvOnce
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[6e]"></a>Car_MotorOutput</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, freescalecar.o(i.Car_MotorOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Car_MotorOutput &rArr; bsp_motor_SetPwm &rArr; drv_ftm_PWMSetDuty &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_SetPwm
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
=======
<P><STRONG><a name="[74]"></a>Car_MotorOutput</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, freescalecar.o(i.Car_MotorOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Car_MotorOutput &rArr; bsp_motor_SetPwm &rArr; drv_ftm_PWMSetDuty &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_SetPwm
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[85]"></a>Car_LeftVelocityPIDCalc</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, freescalecar.o(i.Car_LeftVelocityPIDCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Car_LeftVelocityPIDCalc &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[7c]"></a>Car_ParaInit</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, freescalecar.o(i.Car_ParaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Car_ParaInit &rArr; fuzzy_PIDInit &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_PIDInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDInit
=======
<P><STRONG><a name="[81]"></a>Car_ParaInit</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, freescalecar.o(i.Car_ParaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Car_ParaInit &rArr; fuzzy_PIDInit &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_PIDInit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDInit
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[79]"></a>Car_MotorOutput</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, freescalecar.o(i.Car_MotorOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Car_MotorOutput &rArr; bsp_motor_SetPwm &rArr; drv_ftm_PWMSetDuty &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_SetPwm
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_OFF
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<P><STRONG><a name="[8c]"></a>Car_ParaInit</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, freescalecar.o(i.Car_ParaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Car_ParaInit &rArr; fuzzy_PIDInit &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_PIDInit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDInit
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[7f]"></a>Car_ParaStore</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, freescalecar.o(i.Car_ParaStore))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Car_ParaStore &rArr; drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_WriteSector
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_EraseSector
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[c1]"></a>Car_Reset</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, freescalecar.o(i.Car_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[6c]"></a>Car_RoadDetect</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, freescalecar.o(i.Car_RoadDetect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Car_RoadDetect &rArr; bsp_led_ON &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i_abs
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_ON
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_OFF
=======
<P><STRONG><a name="[84]"></a>Car_ParaStore</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, freescalecar.o(i.Car_ParaStore))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Car_ParaStore &rArr; drv_flash_WriteSector &rArr; drv_flash_StartCmd
=======
<P><STRONG><a name="[8f]"></a>Car_ParaStore</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, freescalecar.o(i.Car_ParaStore))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Car_ParaStore &rArr; drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_WriteSector
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_EraseSector
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[d3]"></a>Car_Reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, freescalecar.o(i.Car_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[92]"></a>Car_RightVelocityPIDCalc</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, freescalecar.o(i.Car_RightVelocityPIDCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Car_RightVelocityPIDCalc &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
</UL>

<P><STRONG><a name="[77]"></a>Car_RoadDetect</STRONG> (Thumb, 506 bytes, Stack size 24 bytes, freescalecar.o(i.Car_RoadDetect))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Car_RoadDetect &rArr; bsp_led_ON &rArr; bsp_led_WritePin &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_ON
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_OFF
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_ON
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_OFF
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<<<<<<< HEAD
<P><STRONG><a name="[86]"></a>Car_SetTarSpeed</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, pid_set.o(i.Car_SetTarSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = Car_SetTarSpeed &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaStore
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[68]"></a>Car_SpeedControlOutput</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, freescalecar.o(i.Car_SpeedControlOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Car_SpeedControlOutput &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
=======
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_abs
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_GetRunTime
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_ON
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_OFF
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_ON
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<<<<<<< HEAD
<P><STRONG><a name="[8f]"></a>DirectionKd_Set</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, pid_set.o(i.DirectionKd_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = DirectionKd_Set &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[91]"></a>DirectionKp_Set</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, pid_set.o(i.DirectionKp_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = DirectionKp_Set &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[92]"></a>DisplayMenuInit</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, menu.o(i.DisplayMenuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = DisplayMenuInit &rArr; GUI_WindowsDraw &rArr; show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MenuItemDraw
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMenuSelectitem
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
</UL>

<P><STRONG><a name="[96]"></a>GUI_Arc4</STRONG> (Thumb, 514 bytes, Stack size 24 bytes, gui_basic.o(i.GUI_Arc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_Arc4 &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Point
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
</UL>

<P><STRONG><a name="[89]"></a>GUI_Button_Selected</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, button.o(i.GUI_Button_Selected))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = GUI_Button_Selected &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Arc4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBtnStringlen
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxButtonStatus
</UL>

<P><STRONG><a name="[9c]"></a>GUI_ClearSCR</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lcmdrv.o(i.GUI_ClearSCR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
</UL>

<P><STRONG><a name="[9e]"></a>GUI_CmpPointColor</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_basic.o(i.GUI_CmpPointColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_CmpPointColor &rArr; GUI_ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
</UL>

<P><STRONG><a name="[88]"></a>GUI_DrawButton</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, button.o(i.GUI_DrawButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Arc4
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBtnStringlen
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[99]"></a>GUI_FloodFill</STRONG> (Thumb, 752 bytes, Stack size 384 bytes, gui_basic.o(i.GUI_FloodFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadPoint
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRightPoint
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadLeftPoint
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CmpPointColor
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
</UL>

<P><STRONG><a name="[a2]"></a>GUI_HLine</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lcmdrv.o(i.GUI_HLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Point
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Rectangle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[9a]"></a>GUI_Line</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, gui_basic.o(i.GUI_Line))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI_Line &rArr; GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RLine
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Point
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
</UL>

<P><STRONG><a name="[95]"></a>GUI_MenuItemDraw</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gui_menu.o(i.GUI_MenuItemDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = GUI_MenuItemDraw &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showPicture
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
</UL>

<P><STRONG><a name="[a5]"></a>GUI_MessageBoxButtonStatus</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, messagebox.o(i.GUI_MessageBoxButtonStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = GUI_MessageBoxButtonStatus &rArr; GUI_Button_Selected &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[a6]"></a>GUI_MessageBoxDraw</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, messagebox.o(i.GUI_MessageBoxDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = GUI_MessageBoxDraw &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Rectangle
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str_mid
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMessageBoxStringlen
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[c0]"></a>GUI_MessageBoxResult</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, messagebox.o(i.GUI_MessageBoxResult))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[97]"></a>GUI_Point</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lcmdrv.o(i.GUI_Point))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_drawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RLine
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Arc4
</UL>

<P><STRONG><a name="[a3]"></a>GUI_RLine</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcmdrv.o(i.GUI_RLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Point
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Rectangle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
</UL>

<P><STRONG><a name="[a0]"></a>GUI_ReadLeftPoint</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_basic.o(i.GUI_ReadLeftPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ReadLeftPoint &rArr; GUI_ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
</UL>

<P><STRONG><a name="[9f]"></a>GUI_ReadPoint</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcmdrv.o(i.GUI_ReadPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_readPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRightPoint
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadLeftPoint
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CmpPointColor
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
</UL>

<P><STRONG><a name="[a1]"></a>GUI_ReadRightPoint</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_basic.o(i.GUI_ReadRightPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ReadRightPoint &rArr; GUI_ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
</UL>

<P><STRONG><a name="[a8]"></a>GUI_Rectangle</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gui_basic.o(i.GUI_Rectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_Rectangle &rArr; GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RLine
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[a7]"></a>GUI_RectangleFill</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gui_basic.o(i.GUI_RectangleFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_RectangleFill &rArr; GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RLine
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Scrollbar_SetPos
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[ad]"></a>GUI_Refresh</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lcmdrv.o(i.GUI_Refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_Refresh &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refreshGram
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[94]"></a>GUI_ScrollbarDraw</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, scrollbar.o(i.GUI_ScrollbarDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_ScrollbarDraw &rArr; GUI_Scrollbar_SetPos &rArr; GUI_RectangleFill &rArr; GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showPicture
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Rectangle
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Scrollbar_SetPos
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_ShowRefresh
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
</UL>

<P><STRONG><a name="[b0]"></a>GUI_Scrollbar_SetPos</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, scrollbar.o(i.GUI_Scrollbar_SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_Scrollbar_SetPos &rArr; GUI_RectangleFill &rArr; GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
</UL>

<P><STRONG><a name="[87]"></a>GUI_WindowsDraw</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, windows.o(i.GUI_WindowsDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = GUI_WindowsDraw &rArr; show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Rectangle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWindowStringlen
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str_mid
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_ShowRefresh
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
=======
<P><STRONG><a name="[8d]"></a>Car_SetTarSpeed</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, pid_set.o(i.Car_SetTarSpeed))
=======
<P><STRONG><a name="[99]"></a>Car_SetTarSpeed</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, pid_set.o(i.Car_SetTarSpeed))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = Car_SetTarSpeed &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaStore
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[75]"></a>Car_SpeedControl</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, freescalecar.o(i.Car_SpeedControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Car_SpeedControl &rArr; Car_RightVelocityPIDCalc &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RightVelocityPIDCalc
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_LeftVelocityPIDCalc
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<P><STRONG><a name="[71]"></a>Car_SpeedControlOutput</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, freescalecar.o(i.Car_SpeedControlOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Car_SpeedControlOutput &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<P><STRONG><a name="[a5]"></a>DirectionKd_Set</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, pid_set.o(i.DirectionKd_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = DirectionKd_Set &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[a7]"></a>DirectionKp_Set</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, pid_set.o(i.DirectionKp_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = DirectionKp_Set &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[a8]"></a>DisplayMenuInit</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, menu.o(i.DisplayMenuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = DisplayMenuInit &rArr; GUI_WindowsDraw &rArr; show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMenuSelectitem
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MenuItemDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
</UL>

<P><STRONG><a name="[ac]"></a>GUI_Arc4</STRONG> (Thumb, 514 bytes, Stack size 24 bytes, gui_basic.o(i.GUI_Arc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_Arc4 &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Point
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
</UL>

<P><STRONG><a name="[9c]"></a>GUI_Button_Selected</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, button.o(i.GUI_Button_Selected))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = GUI_Button_Selected &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Arc4
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBtnStringlen
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxButtonStatus
</UL>

<P><STRONG><a name="[b2]"></a>GUI_ClearSCR</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lcmdrv.o(i.GUI_ClearSCR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
</UL>

<P><STRONG><a name="[b4]"></a>GUI_CmpPointColor</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_basic.o(i.GUI_CmpPointColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_CmpPointColor &rArr; GUI_ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
</UL>

<P><STRONG><a name="[9b]"></a>GUI_DrawButton</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, button.o(i.GUI_DrawButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Arc4
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBtnStringlen
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[af]"></a>GUI_FloodFill</STRONG> (Thumb, 752 bytes, Stack size 384 bytes, gui_basic.o(i.GUI_FloodFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadPoint
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRightPoint
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadLeftPoint
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CmpPointColor
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
</UL>

<P><STRONG><a name="[b8]"></a>GUI_HLine</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lcmdrv.o(i.GUI_HLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Point
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Rectangle
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[b0]"></a>GUI_Line</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, gui_basic.o(i.GUI_Line))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI_Line &rArr; GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RLine
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Point
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
</UL>

<P><STRONG><a name="[ab]"></a>GUI_MenuItemDraw</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gui_menu.o(i.GUI_MenuItemDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = GUI_MenuItemDraw &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showPicture
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
</UL>

<P><STRONG><a name="[bb]"></a>GUI_MessageBoxButtonStatus</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, messagebox.o(i.GUI_MessageBoxButtonStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = GUI_MessageBoxButtonStatus &rArr; GUI_Button_Selected &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[bc]"></a>GUI_MessageBoxDraw</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, messagebox.o(i.GUI_MessageBoxDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = GUI_MessageBoxDraw &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Rectangle
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str_mid
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMessageBoxStringlen
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[d2]"></a>GUI_MessageBoxResult</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, messagebox.o(i.GUI_MessageBoxResult))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[ad]"></a>GUI_Point</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lcmdrv.o(i.GUI_Point))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_drawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RLine
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Arc4
</UL>

<P><STRONG><a name="[b9]"></a>GUI_RLine</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcmdrv.o(i.GUI_RLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Point
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Rectangle
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
</UL>

<P><STRONG><a name="[b6]"></a>GUI_ReadLeftPoint</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_basic.o(i.GUI_ReadLeftPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ReadLeftPoint &rArr; GUI_ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
</UL>

<P><STRONG><a name="[b5]"></a>GUI_ReadPoint</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcmdrv.o(i.GUI_ReadPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_readPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRightPoint
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadLeftPoint
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CmpPointColor
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
</UL>

<P><STRONG><a name="[b7]"></a>GUI_ReadRightPoint</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_basic.o(i.GUI_ReadRightPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ReadRightPoint &rArr; GUI_ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FloodFill
</UL>

<P><STRONG><a name="[be]"></a>GUI_Rectangle</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gui_basic.o(i.GUI_Rectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_Rectangle &rArr; GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RLine
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[bd]"></a>GUI_RectangleFill</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gui_basic.o(i.GUI_RectangleFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_RectangleFill &rArr; GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RLine
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Scrollbar_SetPos
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[c3]"></a>GUI_Refresh</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lcmdrv.o(i.GUI_Refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_Refresh &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refreshGram
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[aa]"></a>GUI_ScrollbarDraw</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, scrollbar.o(i.GUI_ScrollbarDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_ScrollbarDraw &rArr; GUI_Scrollbar_SetPos &rArr; GUI_RectangleFill &rArr; GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showPicture
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Rectangle
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Scrollbar_SetPos
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_ShowRefresh
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
</UL>

<P><STRONG><a name="[c5]"></a>GUI_Scrollbar_SetPos</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, scrollbar.o(i.GUI_Scrollbar_SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_Scrollbar_SetPos &rArr; GUI_RectangleFill &rArr; GUI_RLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
</UL>

<P><STRONG><a name="[9a]"></a>GUI_WindowsDraw</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, windows.o(i.GUI_WindowsDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = GUI_WindowsDraw &rArr; show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HLine
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Rectangle
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWindowStringlen
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str_mid
</UL>
<<<<<<< HEAD
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_ShowRefresh
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_ShowRefresh
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[24]"></a>KBI0_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, drv_kbi.o(i.KBI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KBI0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>KBI1_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, drv_kbi.o(i.KBI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KBI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[102]"></a>MainMenu_Init</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, menu.o(i.MainMenu_Init))
=======
<P><STRONG><a name="[11d]"></a>MainMenu_Init</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, menu.o(i.MainMenu_Init))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MainMenu_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
</UL>

<P><STRONG><a name="[b4]"></a>Menu_Run</STRONG> (Thumb, 416 bytes, Stack size 24 bytes, menu.o(i.Menu_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Menu_Run &rArr; DisplayMenuInit &rArr; GUI_WindowsDraw &rArr; show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MenuItemDraw
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitMenu
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Scrollbar_SetPos
</UL>
<<<<<<< HEAD
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[104]"></a>PIDAdjMenu_Init</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, menu.o(i.PIDAdjMenu_Init))
=======
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[11f]"></a>PIDAdjMenu_Init</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, menu.o(i.PIDAdjMenu_Init))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PIDAdjMenu_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
=======
<P><STRONG><a name="[123]"></a>MainMenu_Init</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, menu.o(i.MainMenu_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MainMenu_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
</UL>

<P><STRONG><a name="[c3]"></a>Menu_Run</STRONG> (Thumb, 416 bytes, Stack size 24 bytes, menu.o(i.Menu_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Menu_Run &rArr; DisplayMenuInit &rArr; GUI_WindowsDraw &rArr; show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MenuItemDraw
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitMenu
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Scrollbar_SetPos
=======
<P><STRONG><a name="[11e]"></a>MainMenu_Init</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, menu.o(i.MainMenu_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MainMenu_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
</UL>

<P><STRONG><a name="[c8]"></a>Menu_Run</STRONG> (Thumb, 416 bytes, Stack size 24 bytes, menu.o(i.Menu_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Menu_Run &rArr; DisplayMenuInit &rArr; GUI_WindowsDraw &rArr; show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitMenu
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Scrollbar_SetPos
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MenuItemDraw
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[120]"></a>PIDAdjMenu_Init</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, menu.o(i.PIDAdjMenu_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PIDAdjMenu_Init
</UL>
<<<<<<< HEAD
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[22]"></a>PIT_CH0_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, drv_pit.o(i.PIT_CH0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PIT_CH0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>PIT_CH1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, drv_pit.o(i.PIT_CH1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PIT_CH1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[103]"></a>ParaSetMenu_Init</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, menu.o(i.ParaSetMenu_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ParaSetMenu_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
</UL>

<P><STRONG><a name="[b6]"></a>Para_ShowRefresh</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, para_show.o(i.Para_ShowRefresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Para_ShowRefresh &rArr; GUI_WindowsDraw &rArr; show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
</UL>

<P><STRONG><a name="[b7]"></a>Para_Show_UI</STRONG> (Thumb, 1570 bytes, Stack size 40 bytes, para_show.o(i.Para_Show_UI))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Para_Show_UI &rArr; Para_ShowRefresh &rArr; GUI_WindowsDraw &rArr; show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_ShowRefresh
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[113]"></a>Partition</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, app_sort.o(i.Partition))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Partition
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_QuickSort
</UL>

<P><STRONG><a name="[ba]"></a>SpeedKi_Set</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, pid_set.o(i.SpeedKi_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = SpeedKi_Set &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[bb]"></a>SpeedKp_Set</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, pid_set.o(i.SpeedKp_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = SpeedKp_Set &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
=======
<P><STRONG><a name="[124]"></a>ParaSetMenu_Init</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, menu.o(i.ParaSetMenu_Init))
=======
<P><STRONG><a name="[11f]"></a>ParaSetMenu_Init</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, menu.o(i.ParaSetMenu_Init))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[11e]"></a>ParaSetMenu_Init</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, menu.o(i.ParaSetMenu_Init))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ParaSetMenu_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
</UL>

<P><STRONG><a name="[ca]"></a>Para_ShowRefresh</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, para_show.o(i.Para_ShowRefresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Para_ShowRefresh &rArr; GUI_WindowsDraw &rArr; show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
</UL>

<P><STRONG><a name="[cb]"></a>Para_Show_UI</STRONG> (Thumb, 1652 bytes, Stack size 40 bytes, para_show.o(i.Para_Show_UI))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Para_Show_UI &rArr; Para_ShowRefresh &rArr; GUI_WindowsDraw &rArr; show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_ShowRefresh
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[12f]"></a>Partition</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, app_sort.o(i.Partition))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Partition
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_QuickSort
</UL>

<P><STRONG><a name="[cd]"></a>SpeedKi_Set</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, pid_set.o(i.SpeedKi_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = SpeedKi_Set &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[ce]"></a>SpeedKp_Set</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, pid_set.o(i.SpeedKp_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = SpeedKp_Set &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
>>>>>>> Mr-He
=======
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_timer.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; SysTick_ISR &rArr; __aeabi_idivmod
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[bc]"></a>SysTick_ISR</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, bsp_timer.o(i.SysTick_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_ISR &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftDec
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
=======
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
=======
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[cf]"></a>SysTick_ISR</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, bsp_timer.o(i.SysTick_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_ISR &rArr; __aeabi_idivmod
</UL>
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftDec
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftDec
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2c]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, system_skeaz1284.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(.text)
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[bf]"></a>SystemReset</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, menu.o(i.SystemReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = SystemReset &rArr; GUI_MessageBoxDraw &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Reset
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxResult
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxButtonStatus
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
=======
<P><STRONG><a name="[ce]"></a>SystemReset</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, menu.o(i.SystemReset))
=======
<P><STRONG><a name="[d1]"></a>SystemReset</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, menu.o(i.SystemReset))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = SystemReset &rArr; GUI_MessageBoxDraw &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Reset
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxResult
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxButtonStatus
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Refresh
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
>>>>>>> Mr-He
=======
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[18]"></a>UART0_IRQHandler</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, app_debug.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART0_IRQHandler
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_IRQHandler
=======
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_IRQHandler
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_IRQHandler
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>UART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drv_uart.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>UART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drv_uart.o(i.UART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[6a]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, freescalecar.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
=======
<P><STRONG><a name="[10e]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drv_gpio.o(i.__ARM_common_switch8))
=======
<P><STRONG><a name="[73]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, freescalecar.o(i.__ARM_common_switch8))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<P><STRONG><a name="[55]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_uart.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[d5]"></a>bsp_Config</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp.o(i.bsp_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = bsp_Config &rArr; bsp_mpu_Config &rArr; bsp_mpu_SetRate &rArr; bsp_mpu_SetLPF &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftConfig
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Config
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Config
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Config
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_Config
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_Init
</UL>
<<<<<<< HEAD
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[e0]"></a>bsp_beep_Config</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_beep.o(i.bsp_beep_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bsp_beep_Config &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<<<<<<< HEAD

<<<<<<< HEAD
<P><STRONG><a name="[c3]"></a>bsp_Config</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bsp.o(i.bsp_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = bsp_Config &rArr; bsp_mpu_Config &rArr; bsp_mpu_SetRate &rArr; bsp_mpu_SetLPF &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftConfig
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Config
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Config
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_Init
=======
<P><STRONG><a name="[55]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_uart.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
=======
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[e2]"></a>bsp_beep_KeyTone</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp_beep.o(i.bsp_beep_KeyTone))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_beep_KeyTone &rArr; bsp_beep_ON &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_ON
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Detect
</UL>

<P><STRONG><a name="[8b]"></a>bsp_beep_OFF</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_beep.o(i.bsp_beep_OFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_beep_OFF &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_MotorOutput
</UL>

<P><STRONG><a name="[93]"></a>bsp_beep_ON</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bsp_beep.o(i.bsp_beep_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_beep_ON &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_KeyTone
</UL>

<P><STRONG><a name="[45]"></a>bsp_beep_Thread</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, bsp_beep.o(i.bsp_beep_Thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_beep_Thread &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[de]"></a>bsp_encoder_Config</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bsp_encoder.o(i.bsp_encoder_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_encoder_Config &rArr; drv_gpio_PullCmd
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_PullCmd
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_init
>>>>>>> Mr-He
=======
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_PullCmd
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_init
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[cc]"></a>bsp_encoder_Config</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bsp_encoder.o(i.bsp_encoder_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_encoder_Config &rArr; drv_gpio_PullCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_PullCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[d1]"></a>bsp_i2c_Ack</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bsp_i2c.o(i.bsp_i2c_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_i2c_Ack &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_ReadByte
</UL>

<P><STRONG><a name="[d3]"></a>bsp_i2c_NoAck</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bsp_i2c.o(i.bsp_i2c_NoAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_i2c_NoAck &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_ReadByte
</UL>

<P><STRONG><a name="[d4]"></a>bsp_i2c_ReadByte</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, bsp_i2c.o(i.bsp_i2c_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bsp_i2c_ReadByte &rArr; bsp_i2c_NoAck &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_NoAck
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
</UL>

<P><STRONG><a name="[d5]"></a>bsp_i2c_SendByte</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, bsp_i2c.o(i.bsp_i2c_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bsp_i2c_SendByte &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
</UL>

<P><STRONG><a name="[d6]"></a>bsp_i2c_Start</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bsp_i2c.o(i.bsp_i2c_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_i2c_Start &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
</UL>

<P><STRONG><a name="[d7]"></a>bsp_i2c_Stop</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bsp_i2c.o(i.bsp_i2c_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_WaitAck
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
</UL>

<P><STRONG><a name="[d8]"></a>bsp_i2c_WaitAck</STRONG> (Thumb, 76 bytes, Stack size 48 bytes, bsp_i2c.o(i.bsp_i2c_WaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
</UL>

<P><STRONG><a name="[c9]"></a>bsp_key_Config</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_key.o(i.bsp_key_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bsp_key_Config &rArr; bsp_key_GPIOConfig &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_GPIOConfig
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_FifoConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[db]"></a>bsp_key_Detect</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, bsp_key.o(i.bsp_key_Detect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_key_Detect
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_PutKey
=======
<P><STRONG><a name="[e6]"></a>bsp_encoder_Config</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bsp_encoder.o(i.bsp_encoder_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_encoder_Config &rArr; drv_gpio_PullCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_PullCmd
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_init
=======
<P><STRONG><a name="[74]"></a>bsp_encoder_ReadCounter</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp_encoder.o(i.bsp_encoder_ReadCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_encoder_ReadCounter
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<P><STRONG><a name="[e5]"></a>bsp_i2c_Ack</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bsp_i2c.o(i.bsp_i2c_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_i2c_Ack &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_ReadByte
</UL>

<P><STRONG><a name="[e7]"></a>bsp_i2c_NoAck</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bsp_i2c.o(i.bsp_i2c_NoAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_i2c_NoAck &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_ReadByte
</UL>

<P><STRONG><a name="[e8]"></a>bsp_i2c_ReadByte</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, bsp_i2c.o(i.bsp_i2c_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bsp_i2c_ReadByte &rArr; bsp_i2c_NoAck &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_NoAck
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadBuff
</UL>

<P><STRONG><a name="[e9]"></a>bsp_i2c_SendByte</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, bsp_i2c.o(i.bsp_i2c_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bsp_i2c_SendByte &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadBuff
</UL>

<P><STRONG><a name="[ea]"></a>bsp_i2c_Start</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bsp_i2c.o(i.bsp_i2c_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_i2c_Start &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadBuff
</UL>

<P><STRONG><a name="[eb]"></a>bsp_i2c_Stop</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bsp_i2c.o(i.bsp_i2c_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_WaitAck
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadBuff
</UL>

<P><STRONG><a name="[ec]"></a>bsp_i2c_WaitAck</STRONG> (Thumb, 76 bytes, Stack size 48 bytes, bsp_i2c.o(i.bsp_i2c_WaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayUs
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadBuff
</UL>

<P><STRONG><a name="[db]"></a>bsp_key_Config</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_key.o(i.bsp_key_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bsp_key_Config &rArr; bsp_key_GPIOConfig &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_GPIOConfig
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_FifoConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[ef]"></a>bsp_key_Detect</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, bsp_key.o(i.bsp_key_Detect))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_key_Detect &rArr; bsp_beep_KeyTone &rArr; bsp_beep_ON &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_PutKey
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_KeyTone
<<<<<<< HEAD
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_PutKey
>>>>>>> Mr-He
=======
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_PutKey
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Scan
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[da]"></a>bsp_key_FifoConfig</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, bsp_key.o(i.bsp_key_FifoConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_key_FifoConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Config
</UL>

<P><STRONG><a name="[d9]"></a>bsp_key_GPIOConfig</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_key.o(i.bsp_key_GPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_key_GPIOConfig &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Config
</UL>

<P><STRONG><a name="[105]"></a>bsp_key_GetKey</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bsp_key.o(i.bsp_key_GetKey))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[dc]"></a>bsp_key_PutKey</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bsp_key.o(i.bsp_key_PutKey))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Detect
=======
<P><STRONG><a name="[f5]"></a>bsp_key_FifoConfig</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, bsp_key.o(i.bsp_key_FifoConfig))
=======
<P><STRONG><a name="[ef]"></a>bsp_key_FifoConfig</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, bsp_key.o(i.bsp_key_FifoConfig))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[ee]"></a>bsp_key_FifoConfig</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, bsp_key.o(i.bsp_key_FifoConfig))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_key_FifoConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Config
</UL>

<P><STRONG><a name="[ed]"></a>bsp_key_GPIOConfig</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_key.o(i.bsp_key_GPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_key_GPIOConfig &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Config
</UL>

<P><STRONG><a name="[121]"></a>bsp_key_GetKey</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bsp_key.o(i.bsp_key_GetKey))
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[f7]"></a>bsp_key_PutKey</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bsp_key.o(i.bsp_key_PutKey))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Detect
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[f1]"></a>bsp_key_PutKey</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bsp_key.o(i.bsp_key_PutKey))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Detect
>>>>>>> Mr-He
=======
<P><STRONG><a name="[f0]"></a>bsp_key_PutKey</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bsp_key.o(i.bsp_key_PutKey))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Detect
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[44]"></a>bsp_key_Scan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_key.o(i.bsp_key_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_key_Scan &rArr; bsp_key_Detect &rArr; bsp_beep_KeyTone &rArr; bsp_beep_ON &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Detect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[c8]"></a>bsp_led_Config</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_led_Config &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_OFF
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[85]"></a>bsp_led_OFF</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_OFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_led_OFF &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Config
</UL>

<P><STRONG><a name="[83]"></a>bsp_led_ON</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_led_ON &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
</UL>

<P><STRONG><a name="[dd]"></a>bsp_led_Toggle</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_led_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
</UL>

<P><STRONG><a name="[cb]"></a>bsp_motor_Config</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, bsp_motor.o(i.bsp_motor_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bsp_motor_Config &rArr; drv_ftm_PWMInit &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMInit
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[7b]"></a>bsp_motor_SetPwm</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bsp_motor.o(i.bsp_motor_SetPwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_motor_SetPwm &rArr; drv_ftm_PWMSetDuty &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMSetDuty
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_MotorOutput
</UL>

<P><STRONG><a name="[ce]"></a>bsp_mpu_Config</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = bsp_mpu_Config &rArr; bsp_mpu_SetRate &rArr; bsp_mpu_SetLPF &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_KanlmanInit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetRate
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetGyroFSR
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetAccelFSR
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_IICConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[e7]"></a>bsp_mpu_ReadByte</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, bsp_mpu.o(i.bsp_mpu_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = bsp_mpu_ReadByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_WaitAck
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Stop
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Start
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_SendByte
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[e2]"></a>bsp_mpu_Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bsp_mpu_Reset &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[e4]"></a>bsp_mpu_SetAccelFSR</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_SetAccelFSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bsp_mpu_SetAccelFSR &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[e3]"></a>bsp_mpu_SetGyroFSR</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_SetGyroFSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bsp_mpu_SetGyroFSR &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[e9]"></a>bsp_mpu_SetLPF</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_SetLPF))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bsp_mpu_SetLPF &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetRate
</UL>

<P><STRONG><a name="[e5]"></a>bsp_mpu_SetRate</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_SetRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = bsp_mpu_SetRate &rArr; bsp_mpu_SetLPF &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetLPF
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[e6]"></a>bsp_mpu_WriteByte</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, bsp_mpu.o(i.bsp_mpu_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_WaitAck
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Stop
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Start
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetRate
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetLPF
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetGyroFSR
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetAccelFSR
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Reset
</UL>

<P><STRONG><a name="[c7]"></a>bsp_oled_Config</STRONG> (Thumb, 256 bytes, Stack size 8 bytes, bsp_oled.o(i.bsp_oled_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_oled_Config &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayMs
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_SetPos
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_GPIOConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[ea]"></a>bsp_oled_GPIOConfig</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_oled.o(i.bsp_oled_GPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_oled_GPIOConfig &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[ed]"></a>bsp_oled_SetPos</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_oled.o(i.bsp_oled_SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsp_oled_SetPos &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[ee]"></a>bsp_sensor_Calibration</STRONG> (Thumb, 548 bytes, Stack size 72 bytes, bsp_sensor.o(i.bsp_sensor_Calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = bsp_sensor_Calibration &rArr; oled_showString &rArr; oled_showChar &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_WriteSector
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_EraseSector
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_ConvOnce
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Toggle
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayMs
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refreshGram
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_QuickSort
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
=======
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Detect
=======
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Detect
>>>>>>> Mr-He
=======
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Detect
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[da]"></a>bsp_led_Config</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsp_led_Config &rArr; bsp_led_OFF &rArr; bsp_led_WritePin &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_OFF
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[98]"></a>bsp_led_OFF</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_OFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_led_OFF &rArr; bsp_led_WritePin &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Config
</UL>

<P><STRONG><a name="[96]"></a>bsp_led_ON</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_led_ON &rArr; bsp_led_WritePin &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
</UL>

<P><STRONG><a name="[f2]"></a>bsp_led_Toggle</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_led_Toggle &rArr; bsp_led_TogglePin
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
</UL>

<P><STRONG><a name="[dd]"></a>bsp_motor_Config</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, bsp_motor.o(i.bsp_motor_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bsp_motor_Config &rArr; drv_ftm_PWMInit &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMInit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[8a]"></a>bsp_motor_SetPwm</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bsp_motor.o(i.bsp_motor_SetPwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_motor_SetPwm &rArr; drv_ftm_PWMSetDuty &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMSetDuty
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_MotorOutput
</UL>

<P><STRONG><a name="[e1]"></a>bsp_mpu_Config</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = bsp_mpu_Config &rArr; bsp_mpu_SetRate &rArr; bsp_mpu_SetLPF &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_KanlmanInit
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetRate
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetGyroFSR
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetAccelFSR
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Reset
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadByte
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_IICConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[46]"></a>bsp_mpu_GetAngle</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, bsp_mpu.o(i.bsp_mpu_GetAngle))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = bsp_mpu_GetAngle &rArr; bsp_mpu_ReadGyro &rArr; bsp_mpu_ReadBuff &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadGyro
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[100]"></a>bsp_mpu_ReadBuff</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, bsp_mpu.o(i.bsp_mpu_ReadBuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bsp_mpu_ReadBuff &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_WaitAck
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Stop
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Start
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_SendByte
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadGyro
</UL>

<P><STRONG><a name="[fd]"></a>bsp_mpu_ReadByte</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, bsp_mpu.o(i.bsp_mpu_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = bsp_mpu_ReadByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_WaitAck
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Stop
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Start
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_SendByte
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[ff]"></a>bsp_mpu_ReadGyro</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, bsp_mpu.o(i.bsp_mpu_ReadGyro))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = bsp_mpu_ReadGyro &rArr; bsp_mpu_ReadBuff &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_ReadBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_GetAngle
</UL>

<P><STRONG><a name="[f8]"></a>bsp_mpu_Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bsp_mpu_Reset &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[fa]"></a>bsp_mpu_SetAccelFSR</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_SetAccelFSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bsp_mpu_SetAccelFSR &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[f9]"></a>bsp_mpu_SetGyroFSR</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_SetGyroFSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bsp_mpu_SetGyroFSR &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[101]"></a>bsp_mpu_SetLPF</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_SetLPF))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bsp_mpu_SetLPF &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetRate
</UL>

<P><STRONG><a name="[fb]"></a>bsp_mpu_SetRate</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_SetRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = bsp_mpu_SetRate &rArr; bsp_mpu_SetLPF &rArr; bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_WriteByte
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetLPF
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[fc]"></a>bsp_mpu_WriteByte</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, bsp_mpu.o(i.bsp_mpu_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = bsp_mpu_WriteByte &rArr; bsp_i2c_WaitAck &rArr; bsp_i2c_Stop &rArr; bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_WaitAck
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Stop
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Start
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetRate
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetLPF
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetGyroFSR
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_SetAccelFSR
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Reset
</UL>

<P><STRONG><a name="[d9]"></a>bsp_oled_Config</STRONG> (Thumb, 256 bytes, Stack size 8 bytes, bsp_oled.o(i.bsp_oled_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_oled_Config &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayMs
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_SetPos
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_GPIOConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[102]"></a>bsp_oled_GPIOConfig</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_oled.o(i.bsp_oled_GPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_oled_GPIOConfig &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[105]"></a>bsp_oled_SetPos</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_oled.o(i.bsp_oled_SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsp_oled_SetPos &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[106]"></a>bsp_sensor_Calibration</STRONG> (Thumb, 548 bytes, Stack size 72 bytes, bsp_sensor.o(i.bsp_sensor_Calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = bsp_sensor_Calibration &rArr; oled_showString &rArr; oled_showChar &rArr; oled_drawPoint
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_WriteSector
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_EraseSector
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_ConvOnce
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Toggle
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayMs
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refreshGram
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_QuickSort
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_ConvOnce
=======
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_ConvOnce
>>>>>>> Mr-He
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_WriteSector
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_EraseSector
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Toggle
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayMs
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refreshGram
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_QuickSort
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<<<<<<< HEAD
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> Mr-He
=======
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[cd]"></a>bsp_sensor_Config</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bsp_sensor.o(i.bsp_sensor_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_sensor_Config &rArr; drv_adc_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[6b]"></a>bsp_sensor_DataProcess</STRONG> (Thumb, 402 bytes, Stack size 40 bytes, bsp_sensor.o(i.bsp_sensor_DataProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = bsp_sensor_DataProcess &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_ConvOnce
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_SildingAverage
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
=======
<P><STRONG><a name="[e7]"></a>bsp_sensor_Config</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bsp_sensor.o(i.bsp_sensor_Config))
=======
<P><STRONG><a name="[df]"></a>bsp_sensor_Config</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bsp_sensor.o(i.bsp_sensor_Config))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_sensor_Config &rArr; drv_adc_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[76]"></a>bsp_sensor_DataProcess</STRONG> (Thumb, 448 bytes, Stack size 40 bytes, bsp_sensor.o(i.bsp_sensor_DataProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = bsp_sensor_DataProcess &rArr; __aeabi_fdiv
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_ConvOnce
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_SildingAverage
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_ConvOnce
=======
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_ConvOnce
>>>>>>> Mr-He
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_SildingAverage
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[ca]"></a>bsp_switch_Config</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, bsp_switch.o(i.bsp_switch_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_switch_Config &rArr; drv_gpio_PullCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_PullCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[71]"></a>bsp_tim_CreateHardTimer</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, bsp_timer.o(i.bsp_tim_CreateHardTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_tim_CreateHardTimer &rArr; drv_pit_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
</UL>

<P><STRONG><a name="[110]"></a>bsp_tim_CreateSoftTimer</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_tim_CreateSoftTimer))
=======
<P><STRONG><a name="[e4]"></a>bsp_switch_Config</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, bsp_switch.o(i.bsp_switch_Config))
=======
<P><STRONG><a name="[dc]"></a>bsp_switch_Config</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, bsp_switch.o(i.bsp_switch_Config))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_switch_Config &rArr; drv_gpio_PullCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_PullCmd
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[7b]"></a>bsp_tim_CreateHardTimer</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, bsp_timer.o(i.bsp_tim_CreateHardTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_tim_CreateHardTimer &rArr; drv_pit_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[132]"></a>bsp_tim_CreateSoftTimer</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_tim_CreateSoftTimer))
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[12d]"></a>bsp_tim_CreateSoftTimer</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_tim_CreateSoftTimer))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[12c]"></a>bsp_tim_CreateSoftTimer</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_tim_CreateSoftTimer))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_tim_CreateSoftTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[eb]"></a>bsp_tim_DelayMs</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_tim_DelayMs))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[d2]"></a>bsp_tim_DelayUs</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, bsp_timer.o(i.bsp_tim_DelayUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_NoAck
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Ack
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_WaitAck
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Stop
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Start
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_SendByte
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_ReadByte
</UL>

<P><STRONG><a name="[73]"></a>bsp_tim_DeleteHardTimer</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_tim_DeleteHardTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_tim_DeleteHardTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
</UL>

<P><STRONG><a name="[c5]"></a>bsp_tim_SoftConfig</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_tim_SoftConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_tim_SoftConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[be]"></a>bsp_tim_SoftDec</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_tim_SoftDec))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>

<P><STRONG><a name="[c6]"></a>bsp_uart_Config</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bsp_uart.o(i.bsp_uart_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_uart_Config &rArr; drv_uart_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Cmd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_ParaInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[f9]"></a>bsp_uart_GetUartNo</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_uart.o(i.bsp_uart_GetUartNo))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_SendDataToBuff
</UL>

<P><STRONG><a name="[c2]"></a>bsp_uart_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, bsp_uart.o(i.bsp_uart_IRQHandler))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[f5]"></a>bsp_uart_ParaInit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, bsp_uart.o(i.bsp_uart_ParaInit))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
</UL>

<P><STRONG><a name="[f8]"></a>bsp_uart_SendDataToBuff</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bsp_uart.o(i.bsp_uart_SendDataToBuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_GetUartNo
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_Response
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
=======
<P><STRONG><a name="[10a]"></a>bsp_tim_DelayMs</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_tim_DelayMs))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
=======
<P><STRONG><a name="[104]"></a>bsp_tim_DelayMs</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_tim_DelayMs))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
>>>>>>> Mr-He
=======
<P><STRONG><a name="[103]"></a>bsp_tim_DelayMs</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_tim_DelayMs))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
>>>>>>> Mr-He
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[e6]"></a>bsp_tim_DelayUs</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, bsp_timer.o(i.bsp_tim_DelayUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_tim_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_NoAck
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Ack
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_WaitAck
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Stop
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_Start
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_SendByte
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_ReadByte
</UL>

<P><STRONG><a name="[7e]"></a>bsp_tim_DeleteHardTimer</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_tim_DeleteHardTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_tim_DeleteHardTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
</UL>

<P><STRONG><a name="[95]"></a>bsp_tim_GetRunTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_tim_GetRunTime))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
</UL>

<P><STRONG><a name="[d7]"></a>bsp_tim_SoftConfig</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_tim_SoftConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_tim_SoftConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[d0]"></a>bsp_tim_SoftDec</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_tim_SoftDec))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>

<P><STRONG><a name="[d8]"></a>bsp_uart_Config</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bsp_uart.o(i.bsp_uart_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_uart_Config &rArr; drv_uart_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Cmd
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_ParaInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[114]"></a>bsp_uart_GetUartNo</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_uart.o(i.bsp_uart_GetUartNo))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_SendDataToBuff
</UL>

<P><STRONG><a name="[d4]"></a>bsp_uart_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, bsp_uart.o(i.bsp_uart_IRQHandler))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[110]"></a>bsp_uart_ParaInit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, bsp_uart.o(i.bsp_uart_ParaInit))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
</UL>

<P><STRONG><a name="[113]"></a>bsp_uart_SendDataToBuff</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bsp_uart.o(i.bsp_uart_SendDataToBuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_GetUartNo
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_Response
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_Response
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
>>>>>>> Mr-He
=======
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_Response
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[43]"></a>debug_CarDataReport</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_debug.o(i.debug_CarDataReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = debug_CarDataReport &rArr; debug_DataProcess &rArr; debug_PIDDownload &rArr; pid_StorePara &rArr; drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_SensorDataReport
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[fa]"></a>debug_DataProcess</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, app_debug.o(i.debug_DataProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = debug_DataProcess &rArr; debug_PIDDownload &rArr; pid_StorePara &rArr; drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_Response
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDDownload
=======
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_SensorDataReport
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
=======
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_SensorDataReport
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
>>>>>>> Mr-He
=======
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_SensorDataReport
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[115]"></a>debug_DataProcess</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, app_debug.o(i.debug_DataProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = debug_DataProcess &rArr; debug_PIDDownload &rArr; pid_StorePara &rArr; drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_Response
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDDownload
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_Response
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDDownload
>>>>>>> Mr-He
=======
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_Response
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDDownload
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_CarDataReport
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[101]"></a>debug_DataUpload</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, app_debug.o(i.debug_DataUpload))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_SendDataToBuff
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_SensorDataReport
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
</UL>

<P><STRONG><a name="[fd]"></a>debug_MPUDataReport</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, app_debug.o(i.debug_MPUDataReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = debug_MPUDataReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
=======
<P><STRONG><a name="[122]"></a>debug_DataUpload</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, app_debug.o(i.debug_DataUpload))
=======
<P><STRONG><a name="[11d]"></a>debug_DataUpload</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, app_debug.o(i.debug_DataUpload))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[11c]"></a>debug_DataUpload</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, app_debug.o(i.debug_DataUpload))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_SendDataToBuff
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_SensorDataReport
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
</UL>

<P><STRONG><a name="[118]"></a>debug_MPUDataReport</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, app_debug.o(i.debug_MPUDataReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = debug_MPUDataReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_CarDataReport
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[fc]"></a>debug_MotorDataReport</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, app_debug.o(i.debug_MotorDataReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = debug_MotorDataReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
=======
<P><STRONG><a name="[11d]"></a>debug_MotorDataReport</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, app_debug.o(i.debug_MotorDataReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = debug_MotorDataReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[118]"></a>debug_MotorDataReport</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, app_debug.o(i.debug_MotorDataReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = debug_MotorDataReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_CarDataReport
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[ff]"></a>debug_PIDDownload</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, app_debug.o(i.debug_PIDDownload))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = debug_PIDDownload &rArr; pid_StorePara &rArr; drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
</UL>

<P><STRONG><a name="[fe]"></a>debug_PIDParaReport</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, app_debug.o(i.debug_PIDParaReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = debug_PIDParaReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
</UL>

<P><STRONG><a name="[100]"></a>debug_Response</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, app_debug.o(i.debug_Response))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = debug_Response &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_SendDataToBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
</UL>

<P><STRONG><a name="[fb]"></a>debug_SensorDataReport</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, app_debug.o(i.debug_SensorDataReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = debug_SensorDataReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
=======
<P><STRONG><a name="[120]"></a>debug_PIDDownload</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, app_debug.o(i.debug_PIDDownload))
=======
<P><STRONG><a name="[11b]"></a>debug_PIDDownload</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, app_debug.o(i.debug_PIDDownload))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = debug_PIDDownload &rArr; pid_StorePara &rArr; drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
</UL>

<P><STRONG><a name="[11a]"></a>debug_PIDParaReport</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, app_debug.o(i.debug_PIDParaReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = debug_PIDParaReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
</UL>

<P><STRONG><a name="[11c]"></a>debug_Response</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, app_debug.o(i.debug_Response))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = debug_Response &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_SendDataToBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
</UL>

<P><STRONG><a name="[117]"></a>debug_SensorDataReport</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, app_debug.o(i.debug_SensorDataReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = debug_SensorDataReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_CarDataReport
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[8d]"></a>displayInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, display.o(i.displayInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = displayInit &rArr; ParaSetMenu_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaSetMenu_Init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDAdjMenu_Init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenu_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[47]"></a>displayTask</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, display.o(i.displayTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = displayTask &rArr; SystemReset &rArr; GUI_MessageBoxDraw &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_GetKey
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Refresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[79]"></a>drv_adc_ConvOnce</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, drv_adc.o(i.drv_adc_ConvOnce))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_GetVoltage
</UL>

<P><STRONG><a name="[f0]"></a>drv_adc_Init</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, drv_adc.o(i.drv_adc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_adc_Init
=======
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> Mr-He
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Config
</UL>

<<<<<<< HEAD
<P><STRONG><a name="[81]"></a>drv_flash_EraseSector</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, drv_flash.o(i.drv_flash_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_flash_EraseSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_StartCmd
=======
<P><STRONG><a name="[117]"></a>debug_MotorDataReport</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, app_debug.o(i.debug_MotorDataReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = debug_MotorDataReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaStore
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
</UL>

<<<<<<< HEAD
<P><STRONG><a name="[c4]"></a>drv_flash_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, drv_flash.o(i.drv_flash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_flash_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[108]"></a>drv_flash_StartCmd</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drv_flash.o(i.drv_flash_StartCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_flash_StartCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_WriteSector
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_EraseSector
</UL>

<P><STRONG><a name="[82]"></a>drv_flash_WriteSector</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, drv_flash.o(i.drv_flash_WriteSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_StartCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaStore
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
</UL>

<P><STRONG><a name="[df]"></a>drv_ftm_PWMInit</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, drv_ftm.o(i.drv_ftm_PWMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = drv_ftm_PWMInit &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
</UL>

<P><STRONG><a name="[e0]"></a>drv_ftm_PWMSetDuty</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, drv_ftm.o(i.drv_ftm_PWMSetDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_ftm_PWMSetDuty &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
=======
<P><STRONG><a name="[11a]"></a>debug_PIDDownload</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, app_debug.o(i.debug_PIDDownload))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = debug_PIDDownload &rArr; pid_StorePara &rArr; drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
</UL>

<P><STRONG><a name="[119]"></a>debug_PIDParaReport</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, app_debug.o(i.debug_PIDParaReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = debug_PIDParaReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
</UL>

<P><STRONG><a name="[11b]"></a>debug_Response</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, app_debug.o(i.debug_Response))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = debug_Response &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_SendDataToBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataProcess
</UL>

<P><STRONG><a name="[116]"></a>debug_SensorDataReport</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, app_debug.o(i.debug_SensorDataReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = debug_SensorDataReport &rArr; debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_DataUpload
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_SetPwm
</UL>

<P><STRONG><a name="[b3]"></a>drv_gpio_Init</STRONG> (Thumb, 256 bytes, Stack size 20 bytes, drv_gpio.o(i.drv_gpio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_GPIOConfig
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_GPIOConfig
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Config
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_IICConfig
=======
<P><STRONG><a name="[94]"></a>displayInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, display.o(i.displayInit))
=======
<P><STRONG><a name="[a0]"></a>displayInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, display.o(i.displayInit))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = displayInit &rArr; setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaSetMenu_Init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDAdjMenu_Init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenu_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[120]"></a>displayTask</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, display.o(i.displayTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = displayTask &rArr; SystemReset &rArr; GUI_MessageBoxDraw &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_GetKey
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[108]"></a>drv_adc_ConvOnce</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, drv_adc.o(i.drv_adc_ConvOnce))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
</UL>

<P><STRONG><a name="[10a]"></a>drv_adc_Init</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, drv_adc.o(i.drv_adc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_adc_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Config
</UL>

<P><STRONG><a name="[90]"></a>drv_flash_EraseSector</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, drv_flash.o(i.drv_flash_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_flash_EraseSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_StartCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaStore
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
</UL>

<P><STRONG><a name="[d6]"></a>drv_flash_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, drv_flash.o(i.drv_flash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_flash_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[124]"></a>drv_flash_StartCmd</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drv_flash.o(i.drv_flash_StartCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_flash_StartCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_WriteSector
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_EraseSector
</UL>

<P><STRONG><a name="[91]"></a>drv_flash_WriteSector</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, drv_flash.o(i.drv_flash_WriteSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_StartCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaStore
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_StorePara
</UL>

<P><STRONG><a name="[f5]"></a>drv_ftm_PWMInit</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, drv_ftm.o(i.drv_ftm_PWMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = drv_ftm_PWMInit &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
</UL>

<P><STRONG><a name="[f6]"></a>drv_ftm_PWMSetDuty</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, drv_ftm.o(i.drv_ftm_PWMSetDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_ftm_PWMSetDuty &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_SetPwm
</UL>

<P><STRONG><a name="[c7]"></a>drv_gpio_Init</STRONG> (Thumb, 256 bytes, Stack size 20 bytes, drv_gpio.o(i.drv_gpio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = drv_gpio_Init
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_GPIOConfig
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_GPIOConfig
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Config
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_Config
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_IICConfig
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SDA_SET_OUT
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SDA_SET_IN
</UL>

<<<<<<< HEAD
<P><STRONG><a name="[d0]"></a>drv_gpio_PullCmd</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, drv_gpio.o(i.drv_gpio_PullCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = drv_gpio_PullCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
</UL>

<P><STRONG><a name="[b2]"></a>drv_gpio_ReadPin</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, drv_gpio.o(i.drv_gpio_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
=======
<P><STRONG><a name="[eb]"></a>drv_gpio_PullCmd</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, drv_gpio.o(i.drv_gpio_PullCmd))
=======
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_GPIOConfig
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_GPIOConfig
=======
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_GPIOConfig
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_GPIOConfig
>>>>>>> Mr-He
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Config
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_Config
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_IICConfig
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SDA_SET_OUT
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SDA_SET_IN
</UL>

<<<<<<< HEAD
<P><STRONG><a name="[e5]"></a>drv_gpio_PullCmd</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, drv_gpio.o(i.drv_gpio_PullCmd))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[e4]"></a>drv_gpio_PullCmd</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, drv_gpio.o(i.drv_gpio_PullCmd))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = drv_gpio_PullCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
</UL>

<P><STRONG><a name="[a4]"></a>drv_gpio_ReadPin</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, drv_gpio.o(i.drv_gpio_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<<<<<<< HEAD
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyUpPress
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyOkPress
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyDownPress
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_READ_SDA
<<<<<<< HEAD
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[de]"></a>drv_gpio_TogglePin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, drv_gpio.o(i.drv_gpio_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Toggle
</UL>

<P><STRONG><a name="[6f]"></a>drv_gpio_WritePin</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, drv_gpio.o(i.drv_gpio_WritePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_SetPwm
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_ON
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_OFF
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
=======
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
=======
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyUpPress
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyOkPress
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyDownPress
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_READ_SDA
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[f4]"></a>drv_gpio_TogglePin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, drv_gpio.o(i.drv_gpio_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_TogglePin
</UL>

<P><STRONG><a name="[7d]"></a>drv_gpio_WritePin</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, drv_gpio.o(i.drv_gpio_WritePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_SetPwm
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_ON
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_OFF
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_ON
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_OFF
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_Config
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SDA_LOW
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SDA_HIGH
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SCL_LOW
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SCL_HIGH
</UL>

<<<<<<< HEAD
<P><STRONG><a name="[f2]"></a>drv_pit_Init</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, drv_pit.o(i.drv_pit_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_pit_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateHardTimer
</UL>

<P><STRONG><a name="[f4]"></a>drv_pit_Stop</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, drv_pit.o(i.drv_pit_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DeleteHardTimer
</UL>

<P><STRONG><a name="[107]"></a>drv_rcc_ClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, drv_rcc.o(i.drv_rcc_ClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Cmd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_Init
</UL>

<P><STRONG><a name="[f7]"></a>drv_uart_Cmd</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, drv_uart.o(i.drv_uart_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_uart_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
</UL>

<P><STRONG><a name="[f6]"></a>drv_uart_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, drv_uart.o(i.drv_uart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_uart_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_SelectChannle
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
</UL>

<P><STRONG><a name="[10a]"></a>drv_uart_SelectChannle</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, drv_uart.o(i.drv_uart_SelectChannle))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
</UL>

<P><STRONG><a name="[b5]"></a>exitMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, menu.o(i.exitMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = exitMenu &rArr; setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
</UL>

<P><STRONG><a name="[e8]"></a>filter_KanlmanInit</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, app_filter.o(i.filter_KanlmanInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = filter_KanlmanInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[f1]"></a>filter_SildingAverage</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_filter.o(i.filter_SildingAverage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = filter_SildingAverage
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
</UL>

<P><STRONG><a name="[cf]"></a>ftm_count_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_encoder.o(i.ftm_count_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ftm_count_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_mux
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
</UL>

<P><STRONG><a name="[10b]"></a>ftm_count_mux</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, bsp_encoder.o(i.ftm_count_mux))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_init
</UL>

<P><STRONG><a name="[76]"></a>fuzzy_PIDClac</STRONG> (Thumb, 860 bytes, Stack size 72 bytes, app_pid.o(i.fuzzy_PIDClac))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = fuzzy_PIDClac &rArr; fuzzy_TriMF &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
</UL>

<P><STRONG><a name="[7d]"></a>fuzzy_PIDInit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_pid.o(i.fuzzy_PIDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = fuzzy_PIDInit &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaInit
</UL>

<P><STRONG><a name="[10c]"></a>fuzzy_TriMF</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, app_pid.o(i.fuzzy_TriMF))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = fuzzy_TriMF &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
</UL>

<P><STRONG><a name="[93]"></a>getMenuSelectitem</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, menu.o(i.getMenuSelectitem))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
</UL>

<P><STRONG><a name="[a9]"></a>getMessageBoxStringlen</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, messagebox.o(i.getMessageBoxStringlen))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = getMessageBoxStringlen &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[b1]"></a>getWindowStringlen</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, windows.o(i.getWindowStringlen))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = getWindowStringlen &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
=======
<P><STRONG><a name="[113]"></a>drv_pit_Init</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, drv_pit.o(i.drv_pit_Init))
=======
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_SetPwm
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_ON
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_OFF
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_Thread
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_WritePin
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_beep_Config
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SDA_LOW
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SDA_HIGH
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SCL_LOW
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SCL_HIGH
</UL>

<<<<<<< HEAD
<P><STRONG><a name="[10e]"></a>drv_pit_Init</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, drv_pit.o(i.drv_pit_Init))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[10d]"></a>drv_pit_Init</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, drv_pit.o(i.drv_pit_Init))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_pit_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateHardTimer
</UL>

<P><STRONG><a name="[10f]"></a>drv_pit_Stop</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, drv_pit.o(i.drv_pit_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DeleteHardTimer
</UL>

<P><STRONG><a name="[123]"></a>drv_rcc_ClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, drv_rcc.o(i.drv_rcc_ClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Cmd
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_Init
</UL>

<P><STRONG><a name="[112]"></a>drv_uart_Cmd</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, drv_uart.o(i.drv_uart_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_uart_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
</UL>

<P><STRONG><a name="[111]"></a>drv_uart_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, drv_uart.o(i.drv_uart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_uart_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_SelectChannle
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
</UL>

<P><STRONG><a name="[126]"></a>drv_uart_SelectChannle</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, drv_uart.o(i.drv_uart_SelectChannle))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
</UL>

<P><STRONG><a name="[c9]"></a>exitMenu</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, menu.o(i.exitMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = exitMenu &rArr; setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Run
</UL>

<P><STRONG><a name="[97]"></a>f_abs</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bsp.o(i.f_abs))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
</UL>

<P><STRONG><a name="[fe]"></a>filter_KanlmanInit</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, app_filter.o(i.filter_KanlmanInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = filter_KanlmanInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[10b]"></a>filter_SildingAverage</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_filter.o(i.filter_SildingAverage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = filter_SildingAverage
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
</UL>

<P><STRONG><a name="[e3]"></a>ftm_count_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_encoder.o(i.ftm_count_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ftm_count_init
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_mux
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
</UL>

<P><STRONG><a name="[127]"></a>ftm_count_mux</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, bsp_encoder.o(i.ftm_count_mux))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_init
</UL>

<P><STRONG><a name="[81]"></a>fuzzy_PIDClac</STRONG> (Thumb, 860 bytes, Stack size 72 bytes, app_pid.o(i.fuzzy_PIDClac))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = fuzzy_PIDClac &rArr; fuzzy_TriMF &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
</UL>

<P><STRONG><a name="[8e]"></a>fuzzy_PIDInit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_pid.o(i.fuzzy_PIDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = fuzzy_PIDInit &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaInit
</UL>

<P><STRONG><a name="[128]"></a>fuzzy_TriMF</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, app_pid.o(i.fuzzy_TriMF))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = fuzzy_TriMF &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
</UL>

<P><STRONG><a name="[a9]"></a>getMenuSelectitem</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, menu.o(i.getMenuSelectitem))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuInit
</UL>

<P><STRONG><a name="[bf]"></a>getMessageBoxStringlen</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, messagebox.o(i.getMessageBoxStringlen))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = getMessageBoxStringlen &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[c6]"></a>getWindowStringlen</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, windows.o(i.getWindowStringlen))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = getWindowStringlen &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<<<<<<< HEAD
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[33]"></a>gotoCarParaReset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, menu.o(i.gotoCarParaReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gotoCarParaReset &rArr; setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
=======
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.MainMenu_Init)
</UL>
<P><STRONG><a name="[32]"></a>gotoNextMenu</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, menu.o(i.gotoNextMenu))
=======
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.MainMenu_Init)
</UL>
<P><STRONG><a name="[31]"></a>gotoNextMenu</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, menu.o(i.gotoNextMenu))
>>>>>>> Mr-He
<BR>[Address Reference Count : 3]<UL><LI> menu.o(i.PIDAdjMenu_Init)
<LI> menu.o(i.ParaSetMenu_Init)
<LI> menu.o(i.MainMenu_Init)
</UL>
<P><STRONG><a name="[30]"></a>gotoParaShow</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, menu.o(i.gotoParaShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gotoParaShow &rArr; setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
=======
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.MainMenu_Init)
</UL>
<P><STRONG><a name="[37]"></a>gotoSetDirctionKd</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, menu.o(i.gotoSetDirctionKd))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gotoSetDirctionKd &rArr; setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
=======
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.PIDAdjMenu_Init)
</UL>
<P><STRONG><a name="[36]"></a>gotoSetDirctionKp</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, menu.o(i.gotoSetDirctionKp))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gotoSetDirctionKp &rArr; setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
=======
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.PIDAdjMenu_Init)
</UL>
<P><STRONG><a name="[35]"></a>gotoSetSpeedKi</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, menu.o(i.gotoSetSpeedKi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gotoSetSpeedKi &rArr; setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
=======
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.PIDAdjMenu_Init)
</UL>
<P><STRONG><a name="[34]"></a>gotoSetSpeedKp</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, menu.o(i.gotoSetSpeedKp))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gotoSetSpeedKp &rArr; setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
=======
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStop
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.PIDAdjMenu_Init)
</UL>
<P><STRONG><a name="[38]"></a>gotoSetTargetSpeed</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, menu.o(i.gotoSetTargetSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gotoSetTargetSpeed &rArr; setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.ParaSetMenu_Init)
</UL>
<P><STRONG><a name="[84]"></a>i_abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp.o(i.i_abs))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
</UL>

<P><STRONG><a name="[51]"></a>main</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = main &rArr; bsp_sensor_Calibration &rArr; oled_showString &rArr; oled_showChar &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayMs
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateSoftTimer
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ControlStart
=======
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
=======
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShow_ui
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.ParaSetMenu_Init)
</UL>
<P><STRONG><a name="[50]"></a>main</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = main &rArr; displayTask &rArr; SystemReset &rArr; GUI_MessageBoxDraw &rArr; GUI_DrawButton &rArr; GUI_FloodFill &rArr; GUI_HLine &rArr; GUI_Point &rArr; oled_drawPoint
</UL>
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayMs
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateSoftTimer
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateHardTimer
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaInit
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayMs
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateSoftTimer
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateHardTimer
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaInit
>>>>>>> Mr-He
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[106]"></a>main_ui</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, main_ui.o(i.main_ui))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main_ui &rArr; oled_showString &rArr; oled_showChar &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showPicture
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[111]"></a>mypow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_oled.o(i.mypow))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
</UL>

<P><STRONG><a name="[9d]"></a>oled_clear</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_oled.o(i.oled_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refreshGram
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearSCR
</UL>

<P><STRONG><a name="[ab]"></a>oled_drawPoint</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bsp_oled.o(i.oled_drawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = oled_drawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showPicture
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Point
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_font
</UL>

<P><STRONG><a name="[ac]"></a>oled_readPoint</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bsp_oled.o(i.oled_readPoint))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadPoint
</UL>

<P><STRONG><a name="[ae]"></a>oled_refreshGram</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bsp_oled.o(i.oled_refreshGram))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Refresh
</UL>

<P><STRONG><a name="[b8]"></a>oled_showChar</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, bsp_oled.o(i.oled_showChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = oled_showChar &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_drawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
</UL>

<P><STRONG><a name="[8c]"></a>oled_showNum</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, bsp_oled.o(i.oled_showNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = oled_showNum &rArr; oled_showChar &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mypow
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[a4]"></a>oled_showPicture</STRONG> (Thumb, 174 bytes, Stack size 60 bytes, bsp_oled.o(i.oled_showPicture))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = oled_showPicture &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_drawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MenuItemDraw
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
</UL>

<P><STRONG><a name="[8a]"></a>oled_showString</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, bsp_oled.o(i.oled_showString))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = oled_showString &rArr; oled_showChar &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[ec]"></a>oled_wr_byte</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bsp_oled.o(i.oled_wr_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refreshGram
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_SetPos
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[7e]"></a>pid_PIDInit</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, app_pid.o(i.pid_PIDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pid_PIDInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaInit
</UL>

<P><STRONG><a name="[90]"></a>pid_StorePara</STRONG> (Thumb, 64 bytes, Stack size 136 bytes, app_pid.o(i.pid_StorePara))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = pid_StorePara &rArr; drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_WriteSector
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_EraseSector
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDDownload
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
</UL>

<P><STRONG><a name="[8e]"></a>setShow_ui</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, display.o(i.setShow_ui))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearSCR
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
=======
<P><STRONG><a name="[128]"></a>main_ui</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, main_ui.o(i.main_ui))
=======
<P><STRONG><a name="[123]"></a>main_ui</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, main_ui.o(i.main_ui))
>>>>>>> Mr-He
=======
<P><STRONG><a name="[122]"></a>main_ui</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, main_ui.o(i.main_ui))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main_ui &rArr; oled_showString &rArr; oled_showChar &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showPicture
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
</UL>

<P><STRONG><a name="[12d]"></a>mypow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_oled.o(i.mypow))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
</UL>

<P><STRONG><a name="[b3]"></a>oled_clear</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_oled.o(i.oled_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refreshGram
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearSCR
</UL>

<P><STRONG><a name="[c1]"></a>oled_drawPoint</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bsp_oled.o(i.oled_drawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = oled_drawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showPicture
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Point
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_font
</UL>

<P><STRONG><a name="[c2]"></a>oled_readPoint</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bsp_oled.o(i.oled_readPoint))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadPoint
</UL>

<P><STRONG><a name="[c4]"></a>oled_refreshGram</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bsp_oled.o(i.oled_refreshGram))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Refresh
</UL>

<P><STRONG><a name="[cc]"></a>oled_showChar</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, bsp_oled.o(i.oled_showChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = oled_showChar &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_drawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showString
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showNum
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
</UL>

<P><STRONG><a name="[9f]"></a>oled_showNum</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, bsp_oled.o(i.oled_showNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = oled_showNum &rArr; oled_showChar &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mypow
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[ba]"></a>oled_showPicture</STRONG> (Thumb, 174 bytes, Stack size 60 bytes, bsp_oled.o(i.oled_showPicture))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = oled_showPicture &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_drawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ScrollbarDraw
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MenuItemDraw
</UL>

<P><STRONG><a name="[9d]"></a>oled_showString</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, bsp_oled.o(i.oled_showString))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = oled_showString &rArr; oled_showChar &rArr; oled_drawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[104]"></a>oled_wr_byte</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bsp_oled.o(i.oled_wr_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refreshGram
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_SetPos
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[8d]"></a>pid_PIDInit</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, app_pid.o(i.pid_PIDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pid_PIDInit
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaInit
</UL>

<P><STRONG><a name="[a6]"></a>pid_StorePara</STRONG> (Thumb, 64 bytes, Stack size 136 bytes, app_pid.o(i.pid_StorePara))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = pid_StorePara &rArr; drv_flash_WriteSector &rArr; drv_flash_StartCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_WriteSector
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_EraseSector
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDDownload
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
</UL>

<P><STRONG><a name="[a1]"></a>setShow_ui</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, display.o(i.setShow_ui))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = setShow_ui &rArr; GUI_ClearSCR &rArr; oled_clear &rArr; oled_refreshGram &rArr; oled_wr_byte &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearSCR
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetTargetSpeed
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetSpeedKp
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetSpeedKi
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetDirctionKp
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetDirctionKd
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoParaShow
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoCarParaReset
<<<<<<< HEAD
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitMenu
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
=======
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitMenu
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
</UL>

<P><STRONG><a name="[33]"></a>setSpeedControl</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, menu.o(i.setSpeedControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setSpeedControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.MainMenu_Init)
</UL>
<<<<<<< HEAD
<P><STRONG><a name="[9b]"></a>show_str</STRONG> (Thumb, 176 bytes, Stack size 64 bytes, text.o(i.show_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_font
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MenuItemDraw
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str_mid
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[aa]"></a>show_str_mid</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, text.o(i.show_str_mid))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[ef]"></a>sort_QuickSort</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, app_sort.o(i.sort_QuickSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = sort_QuickSort &rArr;  sort_QuickSort (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Partition
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_QuickSort
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_QuickSort
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControlOutput
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_MotorOutput
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControlOutput
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[114]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[10e]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
</UL>

<P><STRONG><a name="[116]"></a>_fcmple</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControlOutput
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControlOutput
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_GetVoltage
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
</UL>

<P><STRONG><a name="[151]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[10d]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
</UL>

<P><STRONG><a name="[117]"></a>_frcmple</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
</UL>

<P><STRONG><a name="[118]"></a>_frsb</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControlOutput
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_MotorOutput
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControlOutput
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[11a]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
=======
<P><STRONG><a name="[ab]"></a>show_str</STRONG> (Thumb, 176 bytes, Stack size 64 bytes, text.o(i.show_str))
=======
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearSCR
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTask
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayInit
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetTargetSpeed
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetSpeedKp
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetSpeedKi
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetDirctionKp
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoSetDirctionKd
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoParaShow
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotoCarParaReset
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitMenu
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
</UL>

<P><STRONG><a name="[32]"></a>setSpeedControl</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, menu.o(i.setSpeedControl))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.MainMenu_Init)
</UL>
<P><STRONG><a name="[b1]"></a>show_str</STRONG> (Thumb, 176 bytes, Stack size 64 bytes, text.o(i.show_str))
>>>>>>> Mr-He
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_showChar
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_font
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str_mid
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MenuItemDraw
</UL>

<P><STRONG><a name="[c0]"></a>show_str_mid</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, text.o(i.show_str_mid))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = show_str_mid &rArr; show_str &rArr; show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WindowsDraw
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MessageBoxDraw
</UL>

<P><STRONG><a name="[109]"></a>sort_QuickSort</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, app_sort.o(i.sort_QuickSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = sort_QuickSort &rArr;  sort_QuickSort (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Partition
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_QuickSort
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Calibration
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_QuickSort
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_GetAngle
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<P><STRONG><a name="[130]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[12a]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
</UL>

<P><STRONG><a name="[132]"></a>_fcmple</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RightVelocityPIDCalc
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_LeftVelocityPIDCalc
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_GetAngle
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_PIDParaReport
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MotorDataReport
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_MPUDataReport
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
</UL>

<P><STRONG><a name="[174]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[129]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_PIDClac
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
</UL>

<P><STRONG><a name="[133]"></a>_frcmple</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SpeedControl
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Show_UI
</UL>

<P><STRONG><a name="[134]"></a>_frsb</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RoadDetect
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_RightVelocityPIDCalc
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_LeftVelocityPIDCalc
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_DirectionControl
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_GetAngle
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_TriMF
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_ui
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKp_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedKi_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKp_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectionKd_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_SetTarSpeed
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[13c]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[137]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
>>>>>>> Mr-He
=======
<P><STRONG><a name="[136]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
>>>>>>> Mr-He
</UL>
<P>
<H3>
Local Symbols
</H3>
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[109]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, drv_pit.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
</UL>

<P><STRONG><a name="[f3]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, bsp_timer.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateHardTimer
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftConfig
=======
<P><STRONG><a name="[70]"></a>Car_SpeedControl</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, freescalecar.o(i.Car_SpeedControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Car_SpeedControl &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_PositionalCalc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_get
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_clean
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
=======
<P><STRONG><a name="[126]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, drv_pit.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
>>>>>>> Mr-He
=======
<P><STRONG><a name="[125]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, drv_pit.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[f3]"></a>bsp_led_TogglePin</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_TogglePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_led_TogglePin
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Toggle
</UL>

<P><STRONG><a name="[f1]"></a>bsp_led_WritePin</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_WritePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_led_WritePin &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_ON
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_OFF
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[114]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, bsp_timer.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateHardTimer
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftConfig
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[10f]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, bsp_timer.o(i.NVIC_SetPriority))
=======
<P><STRONG><a name="[10e]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, bsp_timer.o(i.NVIC_SetPriority))
>>>>>>> Mr-He
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateHardTimer
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftConfig
>>>>>>> Mr-He
</UL>

<P><STRONG><a name="[3b]"></a>IsKeyDownPress</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_key.o(i.IsKeyDownPress))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IsKeyDownPress
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
=======
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_key.o(i.bsp_key_FifoConfig)
</UL>
<P><STRONG><a name="[3a]"></a>IsKeyOkPress</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_key.o(i.IsKeyOkPress))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IsKeyOkPress
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
=======
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_key.o(i.bsp_key_FifoConfig)
</UL>
<P><STRONG><a name="[39]"></a>IsKeyUpPress</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_key.o(i.IsKeyUpPress))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IsKeyUpPress
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
=======
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_key.o(i.bsp_key_FifoConfig)
</UL>
<P><STRONG><a name="[42]"></a>MPU_READ_SDA</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_mpu.o(i.MPU_READ_SDA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MPU_READ_SDA
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
=======
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mpu.o(i.bsp_mpu_IICConfig)
</UL>
<P><STRONG><a name="[3c]"></a>MPU_SCL_HIGH</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_mpu.o(i.MPU_SCL_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MPU_SCL_HIGH &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
=======
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mpu.o(i.bsp_mpu_IICConfig)
</UL>
<P><STRONG><a name="[3d]"></a>MPU_SCL_LOW</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_mpu.o(i.MPU_SCL_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MPU_SCL_LOW &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
=======
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mpu.o(i.bsp_mpu_IICConfig)
</UL>
<P><STRONG><a name="[3e]"></a>MPU_SDA_HIGH</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_mpu.o(i.MPU_SDA_HIGH))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MPU_SDA_HIGH &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
=======
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mpu.o(i.bsp_mpu_IICConfig)
</UL>
<P><STRONG><a name="[3f]"></a>MPU_SDA_LOW</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_mpu.o(i.MPU_SDA_LOW))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MPU_SDA_LOW &rArr; drv_gpio_WritePin
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
=======
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mpu.o(i.bsp_mpu_IICConfig)
</UL>
<P><STRONG><a name="[40]"></a>MPU_SDA_SET_IN</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_mpu.o(i.MPU_SDA_SET_IN))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MPU_SDA_SET_IN &rArr; drv_gpio_Init
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
=======
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mpu.o(i.bsp_mpu_IICConfig)
</UL>
<P><STRONG><a name="[41]"></a>MPU_SDA_SET_OUT</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_mpu.o(i.MPU_SDA_SET_OUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MPU_SDA_SET_OUT &rArr; drv_gpio_Init
</UL>
<<<<<<< HEAD
<<<<<<< HEAD
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mpu.o(i.bsp_mpu_IICConfig)
</UL>
<P><STRONG><a name="[e1]"></a>bsp_mpu_IICConfig</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_IICConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_mpu_IICConfig &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[98]"></a>getBtnStringlen</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, button.o(i.getBtnStringlen))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = getBtnStringlen &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
</UL>

<P><STRONG><a name="[112]"></a>show_font</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, text.o(i.show_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_drawPoint
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
</UL>

<P><STRONG><a name="[119]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[115]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
=======
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
=======
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
>>>>>>> Mr-He
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mpu.o(i.bsp_mpu_IICConfig)
</UL>
<P><STRONG><a name="[f7]"></a>bsp_mpu_IICConfig</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_mpu.o(i.bsp_mpu_IICConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_mpu_IICConfig &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_mpu_Config
</UL>

<P><STRONG><a name="[ae]"></a>getBtnStringlen</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, button.o(i.getBtnStringlen))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = getBtnStringlen &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawButton
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Button_Selected
</UL>

<P><STRONG><a name="[12e]"></a>show_font</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, text.o(i.show_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = show_font &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_drawPoint
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_str
</UL>

<P><STRONG><a name="[5e]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[5d]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[135]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[137]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
=======
<P><STRONG><a name="[132]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
>>>>>>> Mr-He
=======
<P><STRONG><a name="[131]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
>>>>>>> Mr-He
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<<<<<<< HEAD
<<<<<<< HEAD
<P><STRONG><a name="[66]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
=======
<P><STRONG><a name="[6c]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
=======
<P><STRONG><a name="[6f]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
>>>>>>> Mr-He
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
>>>>>>> 421d93c508597dfbf2aec154fc71db21e673828f
</UL>
<HR></body></html>
