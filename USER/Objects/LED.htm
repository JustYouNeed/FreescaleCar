<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\LED.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\LED.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Fri Mar 02 23:35:40 2018
<BR><P>
<H3>Maximum Stack Usage =        196 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
app_debug_ShowPara &rArr; bsp_oled_ShowInteger &rArr; bsp_oled_ShowNum &rArr; bsp_oled_ShowChar &rArr; bsp_oled_SetPos &rArr; bsp_oled_WRByte &rArr; drv_gpio_WritePin
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[58]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">NMI_Handler</a><BR>
 <LI><a href="#[8]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">HardFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ACMP0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ACMP0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ACMP0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[21]">ACMP1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1b]">ADC0_IRQHandler</a> from drv_adc.o(i.ADC0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[39]">Car_Control</a> from freescalecar.o(i.Car_Control) referenced from main.o(i.main)
 <LI><a href="#[1d]">FTM0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1e]">FTM1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1f]">FTM2_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[11]">FTMRE_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[8]">HardFault_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[14]">I2C0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[15]">I2C1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[27]">ICS_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[13]">IRQ_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[33]">IsKeyDownPress</a> from bsp_key.o(i.IsKeyDownPress) referenced from bsp_key.o(i.bsp_key_FIFOInit)
 <LI><a href="#[32]">IsKeyOkPress</a> from bsp_key.o(i.IsKeyOkPress) referenced from bsp_key.o(i.bsp_key_FIFOInit)
 <LI><a href="#[31]">IsKeyUpPress</a> from bsp_key.o(i.IsKeyUpPress) referenced from bsp_key.o(i.bsp_key_FIFOInit)
 <LI><a href="#[24]">KBI0_IRQHandler</a> from drv_kbi.o(i.KBI0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[25]">KBI1_IRQHandler</a> from drv_kbi.o(i.KBI1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[12]">LVD_LVW_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2a]">MSCAN_RX_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2b]">MSCAN_TX_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[7]">NMI_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[22]">PIT_CH0_IRQHandler</a> from drv_pit.o(i.PIT_CH0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[23]">PIT_CH1_IRQHandler</a> from drv_pit.o(i.PIT_CH1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[29]">PWT_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[20]">RTC_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[c]">Reserved16_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[d]">Reserved17_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[e]">Reserved18_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[f]">Reserved19_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[10]">Reserved20_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[26]">Reserved42_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[6]">Reset_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[16]">SPI0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[17]">SPI1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from bsp_timer.o(i.SysTick_Handler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2c]">SystemInit</a> from system_skeaz1284.o(i.SystemInit) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[18]">UART0_IRQHandler</a> from app_debug.o(i.UART0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[19]">UART1_IRQHandler</a> from drv_uart.o(i.UART1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1a]">UART2_IRQHandler</a> from drv_uart.o(i.UART2_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[28]">Watchdog_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[3a]">__main</a> from __main.o(!!!main) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[2f]">_cbLeftEncoder</a> from bsp_encoder.o(i._cbLeftEncoder) referenced from bsp_encoder.o(i.bsp_encoder_Config)
 <LI><a href="#[30]">_cbRightEncoder</a> from bsp_encoder.o(i._cbRightEncoder) referenced from bsp_encoder.o(i.bsp_encoder_Config)
 <LI><a href="#[36]">app_debug_SensorDataReport</a> from app_debug.o(i.app_debug_SensorDataReport) referenced from main.o(i.main)
 <LI><a href="#[37]">app_debug_ShowPara</a> from app_debug.o(i.app_debug_ShowPara) referenced from main.o(i.main)
 <LI><a href="#[38]">bsp_encoder_SpeedCalc</a> from bsp_encoder.o(i.bsp_encoder_SpeedCalc) referenced from main.o(i.main)
 <LI><a href="#[34]">bsp_key_Scan</a> from bsp_key.o(i.bsp_key_Scan) referenced from main.o(i.main)
 <LI><a href="#[2d]">init_data_bss</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[35]">test_LedTest</a> from main.o(i.test_LedTest) referenced from main.o(i.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3a]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3b]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3d]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[a3]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[a4]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[a5]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[41]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[a6]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[a8]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[a9]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[aa]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[ab]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[ac]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[ad]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[ae]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[af]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[b0]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[b1]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[b2]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[b3]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[46]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[bb]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[bc]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[bd]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[be]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[bf]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[c0]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[c1]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[3c]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[c2]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[3e]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[40]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[c3]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[42]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; bsp_Config &rArr; bsp_motor_Config &rArr; drv_ftm_PWMInit &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[c4]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[51]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[45]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[c5]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[47]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2d]"></a>init_data_bss</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(.text)
</UL>
<P><STRONG><a name="[6]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ACMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ACMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[c6]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text), UNUSED)

<P><STRONG><a name="[1d]"></a>FTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>FTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FTMRE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ICS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>IRQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>MSCAN_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>MSCAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PWT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>Reserved16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>Reserved17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>Reserved18_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Reserved19_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>Reserved42_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>Watchdog_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_skeaz1284.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c7]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[49]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[c8]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_debug_DataUpload
</UL>

<P><STRONG><a name="[c9]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMInit
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_SildingAverage
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowNum
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowInteger
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftConfig
</UL>

<P><STRONG><a name="[cb]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_SpeedCalc
</UL>

<P><STRONG><a name="[cc]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ffixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_debug_ShowPara
</UL>

<P><STRONG><a name="[cf]"></a>_ffix</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, ffixi.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataNormalized
</UL>

<P><STRONG><a name="[d0]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>

<P><STRONG><a name="[d1]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[d4]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[d5]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>Car_Control</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, freescalecar.o(i.Car_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Car_Control &rArr; bsp_sensor_DataProcess &rArr; bsp_sensor_DataNormalized &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_PIDCalc
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_MotorControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[8a]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataNormalized
</UL>

<P><STRONG><a name="[56]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[55]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[3f]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[d6]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1b]"></a>ADC0_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, drv_adc.o(i.ADC0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>Car_MotorControl</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, freescalecar.o(i.Car_MotorControl))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<P><STRONG><a name="[53]"></a>Car_PIDCalc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, freescalecar.o(i.Car_PIDCalc))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<P><STRONG><a name="[9d]"></a>Car_ParaInit</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, freescalecar.o(i.Car_ParaInit))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>KBI0_IRQHandler</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, drv_kbi.o(i.KBI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KBI0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>KBI1_IRQHandler</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, drv_kbi.o(i.KBI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KBI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PIT_CH0_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, drv_pit.o(i.PIT_CH0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PIT_CH0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>PIT_CH1_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, drv_pit.o(i.PIT_CH1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PIT_CH1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_timer.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_Handler &rArr; SysTick_ISR &rArr; bsp_tim_SoftDec
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>SysTick_ISR</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, bsp_timer.o(i.SysTick_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_ISR &rArr; bsp_tim_SoftDec
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftDec
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2c]"></a>SystemInit</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, system_skeaz1284.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(.text)
</UL>
<P><STRONG><a name="[18]"></a>UART0_IRQHandler</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, app_debug.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART0_IRQHandler &rArr; bsp_uart_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>UART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drv_uart.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>UART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drv_uart.o(i.UART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drv_gpio.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Toggle
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_OFF
</UL>

<P><STRONG><a name="[48]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_uart.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[5d]"></a>app_debug_DataUpload</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, app_debug.o(i.app_debug_DataUpload))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_SendDataToBuff
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_debug_SensorDataReport
</UL>

<P><STRONG><a name="[36]"></a>app_debug_SensorDataReport</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, app_debug.o(i.app_debug_SensorDataReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_debug_SensorDataReport &rArr; app_debug_DataUpload &rArr; bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_debug_DataUpload
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_debug_ShowPara
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[37]"></a>app_debug_ShowPara</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, app_debug.o(i.app_debug_ShowPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = app_debug_ShowPara &rArr; bsp_oled_ShowInteger &rArr; bsp_oled_ShowNum &rArr; bsp_oled_ShowChar &rArr; bsp_oled_SetPos &rArr; bsp_oled_WRByte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_debug_SensorDataReport
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowString
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowInteger
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Clear
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[65]"></a>bsp_Config</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsp.o(i.bsp_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bsp_Config &rArr; bsp_motor_Config &rArr; drv_ftm_PWMInit &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftConfig
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Config
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Config
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>bsp_encoder_Config</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bsp_encoder.o(i.bsp_encoder_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_encoder_Config &rArr; drv_kbi_Init &rArr; drv_gpio_PullCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_kbi_SetCallback
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_kbi_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[38]"></a>bsp_encoder_SpeedCalc</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, bsp_encoder.o(i.bsp_encoder_SpeedCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_encoder_SpeedCalc &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_GetRunTime
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[6b]"></a>bsp_key_Config</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_key.o(i.bsp_key_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bsp_key_Config &rArr; bsp_key_GPIOInit &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_GPIOInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_FIFOInit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[77]"></a>bsp_key_Detect</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, bsp_key.o(i.bsp_key_Detect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_key_Detect
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_PutKeyToFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Scan
</UL>

<P><STRONG><a name="[79]"></a>bsp_key_GetKey</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, bsp_key.o(i.bsp_key_GetKey))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Scan
</UL>

<P><STRONG><a name="[78]"></a>bsp_key_PutKeyToFIFO</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, bsp_key.o(i.bsp_key_PutKeyToFIFO))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Detect
</UL>

<P><STRONG><a name="[34]"></a>bsp_key_Scan</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bsp_key.o(i.bsp_key_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_key_Scan &rArr; bsp_led_Toggle &rArr; drv_gpio_TogglePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Toggle
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_GetKey
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Detect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[6a]"></a>bsp_led_Config</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bsp_led_Config &rArr; bsp_led_OFF &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_OFF
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[7b]"></a>bsp_led_OFF</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_OFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_led_OFF &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Config
</UL>

<P><STRONG><a name="[7a]"></a>bsp_led_Toggle</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, bsp_led.o(i.bsp_led_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_led_Toggle &rArr; drv_gpio_TogglePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_TogglePin
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Scan
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_LedTest
</UL>

<P><STRONG><a name="[6f]"></a>bsp_motor_Config</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, bsp_motor.o(i.bsp_motor_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bsp_motor_Config &rArr; drv_ftm_PWMInit &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ftm_PWMInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[60]"></a>bsp_oled_Clear</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bsp_oled.o(i.bsp_oled_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = bsp_oled_Clear &rArr; bsp_oled_WRByte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_WRByte
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_debug_ShowPara
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[69]"></a>bsp_oled_Config</STRONG> (Thumb, 288 bytes, Stack size 8 bytes, bsp_oled.o(i.bsp_oled_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = bsp_oled_Config &rArr; bsp_oled_SetPos &rArr; bsp_oled_WRByte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_WRByte
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_SetPos
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_GPIOConfig
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Clear
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[81]"></a>bsp_oled_GPIOConfig</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bsp_oled.o(i.bsp_oled_GPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_oled_GPIOConfig &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[83]"></a>bsp_oled_SetPos</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bsp_oled.o(i.bsp_oled_SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = bsp_oled_SetPos &rArr; bsp_oled_WRByte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_WRByte
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowChar
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[84]"></a>bsp_oled_ShowChar</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, bsp_oled.o(i.bsp_oled_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = bsp_oled_ShowChar &rArr; bsp_oled_SetPos &rArr; bsp_oled_WRByte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_WRByte
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_SetPos
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowString
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowNum
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowInteger
</UL>

<P><STRONG><a name="[63]"></a>bsp_oled_ShowInteger</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, bsp_oled.o(i.bsp_oled_ShowInteger))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = bsp_oled_ShowInteger &rArr; bsp_oled_ShowNum &rArr; bsp_oled_ShowChar &rArr; bsp_oled_SetPos &rArr; bsp_oled_WRByte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowNum
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowChar
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_debug_ShowPara
</UL>

<P><STRONG><a name="[86]"></a>bsp_oled_ShowNum</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, bsp_oled.o(i.bsp_oled_ShowNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = bsp_oled_ShowNum &rArr; bsp_oled_ShowChar &rArr; bsp_oled_SetPos &rArr; bsp_oled_WRByte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_pow
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowChar
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowInteger
</UL>

<P><STRONG><a name="[64]"></a>bsp_oled_ShowString</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bsp_oled.o(i.bsp_oled_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = bsp_oled_ShowString &rArr; bsp_oled_ShowChar &rArr; bsp_oled_SetPos &rArr; bsp_oled_WRByte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_debug_ShowPara
</UL>

<P><STRONG><a name="[80]"></a>bsp_oled_WRByte</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, bsp_oled.o(i.bsp_oled_WRByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bsp_oled_WRByte &rArr; drv_gpio_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowChar
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_SetPos
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Clear
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[6e]"></a>bsp_sensor_Config</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bsp_sensor.o(i.bsp_sensor_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_sensor_Config &rArr; drv_adc_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[89]"></a>bsp_sensor_DataNormalized</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, bsp_sensor.o(i.bsp_sensor_DataNormalized))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bsp_sensor_DataNormalized &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
</UL>

<P><STRONG><a name="[52]"></a>bsp_sensor_DataProcess</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, bsp_sensor.o(i.bsp_sensor_DataProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = bsp_sensor_DataProcess &rArr; bsp_sensor_DataNormalized &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_GetMultiADCResult
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Toggle
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_SildingAverage
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataNormalized
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Control
</UL>

<P><STRONG><a name="[6c]"></a>bsp_switch_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bsp_switch.o(i.bsp_switch_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_switch_Config &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[8f]"></a>bsp_tim_CreateHardTimer</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, bsp_timer.o(i.bsp_tim_CreateHardTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_tim_CreateHardTimer &rArr; drv_pit_Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>bsp_tim_CreateSoftTimer</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_tim_CreateSoftTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_tim_CreateSoftTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>bsp_tim_DelayMs</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_tim_DelayMs))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
</UL>

<P><STRONG><a name="[73]"></a>bsp_tim_GetRunTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_tim_GetRunTime))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_SpeedCalc
</UL>

<P><STRONG><a name="[67]"></a>bsp_tim_SoftConfig</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_tim_SoftConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_tim_SoftConfig &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[5b]"></a>bsp_tim_SoftDec</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bsp_timer.o(i.bsp_tim_SoftDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_tim_SoftDec
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>

<P><STRONG><a name="[68]"></a>bsp_uart_Config</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, bsp_uart.o(i.bsp_uart_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_uart_Config &rArr; drv_uart_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Cmd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_PullCmd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_ParaInit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[96]"></a>bsp_uart_GetUartNo</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bsp_uart.o(i.bsp_uart_GetUartNo))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_SendDataToBuff
</UL>

<P><STRONG><a name="[5c]"></a>bsp_uart_IRQHandler</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, bsp_uart.o(i.bsp_uart_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_uart_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[93]"></a>bsp_uart_ParaInit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bsp_uart.o(i.bsp_uart_ParaInit))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
</UL>

<P><STRONG><a name="[5f]"></a>bsp_uart_SendDataToBuff</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, bsp_uart.o(i.bsp_uart_SendDataToBuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_uart_SendDataToBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_GetUartNo
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_debug_DataUpload
</UL>

<P><STRONG><a name="[8b]"></a>drv_adc_GetMultiADCResult</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drv_adc.o(i.drv_adc_GetMultiADCResult))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
</UL>

<P><STRONG><a name="[88]"></a>drv_adc_Init</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, drv_adc.o(i.drv_adc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = drv_adc_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_Config
</UL>

<P><STRONG><a name="[66]"></a>drv_flash_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, drv_flash.o(i.drv_flash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_flash_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
</UL>

<P><STRONG><a name="[7f]"></a>drv_ftm_PWMInit</STRONG> (Thumb, 396 bytes, Stack size 56 bytes, drv_ftm.o(i.drv_ftm_PWMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = drv_ftm_PWMInit &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
</UL>

<P><STRONG><a name="[70]"></a>drv_gpio_Init</STRONG> (Thumb, 458 bytes, Stack size 20 bytes, drv_gpio.o(i.drv_gpio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_GPIOConfig
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_GPIOInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_switch_Config
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Config
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
</UL>

<P><STRONG><a name="[92]"></a>drv_gpio_PullCmd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, drv_gpio.o(i.drv_gpio_PullCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_gpio_PullCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_kbi_Init
</UL>

<P><STRONG><a name="[59]"></a>drv_gpio_ReadPin</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, drv_gpio.o(i.drv_gpio_ReadPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_gpio_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbRightEncoder
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbLeftEncoder
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyUpPress
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyOkPress
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyDownPress
</UL>

<P><STRONG><a name="[7e]"></a>drv_gpio_TogglePin</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, drv_gpio.o(i.drv_gpio_TogglePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_gpio_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Toggle
</UL>

<P><STRONG><a name="[7d]"></a>drv_gpio_WritePin</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, drv_gpio.o(i.drv_gpio_WritePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = drv_gpio_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_WRByte
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_OFF
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_Config
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_motor_Config
</UL>

<P><STRONG><a name="[71]"></a>drv_kbi_Init</STRONG> (Thumb, 458 bytes, Stack size 24 bytes, drv_kbi.o(i.drv_kbi_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = drv_kbi_Init &rArr; drv_gpio_PullCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_PullCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
</UL>

<P><STRONG><a name="[72]"></a>drv_kbi_SetCallback</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, drv_kbi.o(i.drv_kbi_SetCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_kbi_SetCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_encoder_Config
</UL>

<P><STRONG><a name="[90]"></a>drv_pit_Init</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, drv_pit.o(i.drv_pit_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_pit_Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateHardTimer
</UL>

<P><STRONG><a name="[97]"></a>drv_rcc_ClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, drv_rcc.o(i.drv_rcc_ClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_adc_Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Cmd
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
</UL>

<P><STRONG><a name="[95]"></a>drv_uart_Cmd</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, drv_uart.o(i.drv_uart_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_uart_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
</UL>

<P><STRONG><a name="[94]"></a>drv_uart_Init</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, drv_uart.o(i.drv_uart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_uart_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_SelectChannle
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_Config
</UL>

<P><STRONG><a name="[9c]"></a>drv_uart_SelectChannle</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, drv_uart.o(i.drv_uart_SelectChannle))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_Init
</UL>

<P><STRONG><a name="[8c]"></a>filter_SildingAverage</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, app_filter.o(i.filter_SildingAverage))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = filter_SildingAverage
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
</UL>

<P><STRONG><a name="[43]"></a>main</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = main &rArr; bsp_Config &rArr; bsp_motor_Config &rArr; drv_ftm_PWMInit &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateSoftTimer
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_CreateHardTimer
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Config
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_ParaInit
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[87]"></a>oled_pow</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_oled.o(i.oled_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = oled_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_oled_ShowNum
</UL>

<P><STRONG><a name="[35]"></a>test_LedTest</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(i.test_LedTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = test_LedTest &rArr; bsp_led_Toggle &rArr; drv_gpio_TogglePin
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[8d]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
</UL>

<P><STRONG><a name="[9f]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_debug_ShowPara
</UL>

<P><STRONG><a name="[d8]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[8e]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_sensor_DataProcess
</UL>

<P><STRONG><a name="[a1]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9a]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, drv_pit.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
</UL>

<P><STRONG><a name="[9b]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, drv_pit.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pit_Init
</UL>

<P><STRONG><a name="[98]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, drv_kbi.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_kbi_Init
</UL>

<P><STRONG><a name="[99]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, drv_kbi.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_kbi_Init
</UL>

<P><STRONG><a name="[91]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bsp_timer.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_SoftConfig
</UL>

<P><STRONG><a name="[33]"></a>IsKeyDownPress</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_key.o(i.IsKeyDownPress))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IsKeyDownPress &rArr; drv_gpio_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_key.o(i.bsp_key_FIFOInit)
</UL>
<P><STRONG><a name="[32]"></a>IsKeyOkPress</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_key.o(i.IsKeyOkPress))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IsKeyOkPress &rArr; drv_gpio_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_key.o(i.bsp_key_FIFOInit)
</UL>
<P><STRONG><a name="[31]"></a>IsKeyUpPress</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_key.o(i.IsKeyUpPress))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IsKeyUpPress &rArr; drv_gpio_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_key.o(i.bsp_key_FIFOInit)
</UL>
<P><STRONG><a name="[76]"></a>bsp_key_FIFOInit</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, bsp_key.o(i.bsp_key_FIFOInit))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Config
</UL>

<P><STRONG><a name="[75]"></a>bsp_key_GPIOInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bsp_key.o(i.bsp_key_GPIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bsp_key_GPIOInit &rArr; drv_gpio_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_Config
</UL>

<P><STRONG><a name="[2f]"></a>_cbLeftEncoder</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp_encoder.o(i._cbLeftEncoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _cbLeftEncoder &rArr; drv_gpio_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_encoder.o(i.bsp_encoder_Config)
</UL>
<P><STRONG><a name="[30]"></a>_cbRightEncoder</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp_encoder.o(i._cbRightEncoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _cbRightEncoder &rArr; drv_gpio_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_ReadPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_encoder.o(i.bsp_encoder_Config)
</UL>
<P><STRONG><a name="[a2]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[a0]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[50]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
